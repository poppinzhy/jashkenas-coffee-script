#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

module CoffeeScript

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 466)
  # Lex and parse a CoffeeScript.
  def parse(code)
    # Uncomment the following line to enable grammar debugging, in combination
    # with the -g flag in the Rake build task.
    # @yydebug = true
    @tokens = Lexer.new.tokenize(code)
    do_parse
  end

  # Retrieve the next token from the list.
  def next_token
    @tokens.shift
  end

  # Raise a custom error class that knows about line numbers.
  def on_error(error_token_id, error_value, value_stack)
    raise ParseError.new(token_to_str(error_token_id), error_value, value_stack)
  end

...end grammar.y/module_eval...
##### State transition tables begin ###

clist = [
'136,11,144,29,32,35,41,44,49,54,58,63,66,106,107,108,61,1,178,281,21',
'26,103,300,105,112,43,163,262,55,59,67,132,138,-186,-186,51,152,12,280',
'22,166,33,37,171,45,279,51,56,61,61,163,13,17,74,4,9,15,151,155,158',
'161,165,169,131,135,140,143,147,150,154,157,160,164,168,130,134,139',
'142,146,149,153,156,159,162,167,129,133,137,141,145,148,172,2,7,125',
'177,310,30,274,36,39,11,48,208,29,32,35,41,44,49,54,58,63,66,283,271',
'202,61,1,212,213,21,26,287,288,202,98,43,296,61,55,59,67,68,97,270,122',
'61,6,12,210,22,202,33,37,163,45,113,51,56,114,77,-186,-186,290,74,4',
'9,15,19,24,13,17,200,40,47,262,262,201,51,13,17,200,61,51,51,98,297',
'13,17,13,17,186,98,97,13,17,13,17,200,163,97,206,207,2,7,61,-186,-186',
'30,176,36,39,11,48,84,29,32,35,41,44,49,54,58,63,66,61,13,17,51,1,99',
'98,21,26,84,51,189,99,43,97,98,55,59,67,68,287,288,190,97,6,12,195,22',
'196,33,37,163,45,197,51,56,13,17,151,155,163,74,4,9,15,19,24,-186,-186',
'51,40,47,163,13,17,186,291,187,51,151,155,158,161,165,169,131,135,140',
'143,147,150,154,157,160,164,168,130,134,139,142,2,7,2,7,77,30,61,36',
'39,11,48,319,29,32,35,41,44,49,54,58,63,66,106,107,108,224,1,13,17,21',
'26,103,209,105,125,43,163,211,55,59,67,68,258,-186,-186,,6,12,,22,,33',
'37,163,45,,51,56,212,213,151,155,,74,4,9,15,19,24,163,,,40,47,,,151',
'155,158,161,165,169,131,135,140,143,147,150,154,157,160,164,168,130',
'134,139,142,313,163,,,,2,7,,-186,-186,30,,36,39,11,48,,29,32,35,41,44',
'49,54,58,63,66,106,107,108,,1,,,21,26,103,,105,,43,163,,55,59,67,68',
',151,155,,6,12,,22,,33,37,163,45,,51,56,,,-186,-186,,74,4,9,15,19,24',
'163,,,40,47,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157',
'160,164,168,130,134,139,142,106,107,108,,,2,7,,,103,30,105,36,39,11',
'48,,29,32,35,41,44,49,54,58,63,66,106,107,108,,1,,,21,26,103,,105,,43',
'163,,55,59,67,68,,-186,-186,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9',
'15,19,24,163,,,40,47,,,151,155,158,161,165,169,131,135,140,143,147,150',
'154,157,160,164,168,130,134,139,142,106,107,108,,,2,7,,,103,30,105,36',
'39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59',
'67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,163,,,40,47',
',,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160,164,168',
'130,134,139,142,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58',
'63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51',
'56,,,,,,74,4,9,15,19,24,163,,,40,47,,,151,155,158,161,165,169,131,135',
'140,143,147,150,154,157,160,164,168,130,134,139,142,,,,,,2,7,,,,30,',
'36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55',
'59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,163,,,40',
'47,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160,164',
'168,130,134,139,142,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54',
'58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45',
',51,56,,,,,,74,4,9,15,19,24,163,,,40,47,,,151,155,158,161,165,169,131',
'135,140,143,147,150,154,157,160,164,168,130,134,139,142,,,,,,2,7,,,',
'30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43',
',,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,163',
',,40,47,,,151,155,158,161,165,169,131,135,140,143,147,150,154,163,,',
',,,,151,155,158,161,165,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54',
'58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45',
',51,56,,,,,,74,4,9,15,19,24,163,,,40,47,,,151,155,158,161,165,169,131',
'135,140,143,147,150,154,163,,,,,,,151,155,158,161,165,,2,7,,,,30,,36',
'39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59',
'67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,163,,,40,47',
',,151,155,158,161,165,169,131,135,140,143,147,150,154,,,,,,,,,,,,,,2',
'7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,',
',,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19',
'24,163,,,40,47,,,151,155,158,161,165,169,131,135,140,143,147,150,154',
',,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,',
',,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,',
',,74,4,9,15,19,24,163,,,40,47,,,151,155,158,161,165,169,131,135,140',
'143,,,,,,,,,,,,303,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54',
'58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45',
',51,56,,,,,,74,4,9,15,19,24,163,,,40,47,,,151,155,158,161,165,169,131',
'135,140,143,163,,,,,,,151,155,158,161,165,169,131,,,2,7,,,,30,,36,39',
'11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67',
'68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,163,,,40,47,',
',151,155,158,161,165,169,131,135,140,143,163,,,,,,,151,155,158,161,165',
'169,131,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,',
'1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74',
'4,9,15,19,24,163,,,40,47,,,151,155,158,161,165,169,131,,,,,,,,,,,,,',
',,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,',
'21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4',
'9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11',
'48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68',
',,,,6,12,,22,,33,37,,45,,51,56,114,,,,,74,4,9,15,19,24,,,,40,47,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54',
'58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45',
',51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7',
',,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,',
'43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24',
',,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35',
'41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22',
',33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1',
',,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74',
'4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11',
'48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68',
',,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58',
'63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51',
'56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,',
'30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43',
',,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,123,,,,74,4,9,15,19,24',
',,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35',
'41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22',
',33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1',
',,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,275,,,,',
'74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,13,17,,30,',
'36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55',
'59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49',
'54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,',
'45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26',
',,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19',
'24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32',
'35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12',
',22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,',
',,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,',
',74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36',
'39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59',
'67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49',
'54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,',
'45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26',
',,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19',
'24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32',
'35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12',
',22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,',
',,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,',
',74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36',
'39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59',
'67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49',
'54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,',
'45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26',
',,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19',
'24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32',
'35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12',
',22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,',
',,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,',
',74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36',
'39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59',
'67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49',
'54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,',
'45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26',
',,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19',
'24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32',
'35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12',
',22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,',
',,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,',
',74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36',
'39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59',
'67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49',
'54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,',
'45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26',
',,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19',
'24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32',
'35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12',
',22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,',
',,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,',
',74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36',
'39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59',
'67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49',
'54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,',
'45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26',
',,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19',
'24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32',
'35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12',
',22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,',
',,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,',
',74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36',
'39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59',
'67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49',
'54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,',
'45,,51,56,114,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21',
'26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15',
'19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29',
'32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6',
'12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66',
',,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,',
',,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36',
'39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59',
'67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49',
'54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,',
'45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26',
',,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19',
'24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32',
'35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12',
',22,,33,37,,45,,51,56,61,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,2,7,13,17,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63',
'66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56',
',,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30',
',36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55',
'59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49',
'54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,',
'45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26',
',,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19',
'24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32',
'35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12',
',22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,2,7,,,,30,,36,39,11,48,,29,32,35,41,44,49,54,58,63,66,,',
',,1,,,21,26,,,,,43,,,55,59,67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,,',
',74,4,9,15,19,24,,,,40,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,7,,,,30,,36',
'39,11,48,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,,,55,59',
'67,68,,,,,6,12,,22,,33,37,,45,,51,56,,,136,,144,74,4,9,15,19,24,,,,40',
'47,,,,,,,,,,,,,,,,,,,132,138,,,,152,,,,166,2,7,,,,30,,36,39,163,48,',
',,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160,164',
'168,130,134,139,142,146,149,153,156,159,162,167,129,133,137,141,145',
'148,136,,144,,,,,,,,322,,,,,,,,,,,,,,,,,,,,,,132,138,,,,152,,,,166,',
',,,,,,,,163,,,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154',
'157,160,164,168,130,134,139,142,146,149,153,156,159,162,167,129,133',
'137,141,145,148,29,32,35,41,44,49,54,58,63,66,316,,,,1,,,21,26,,,,,43',
',,55,59,67,,,,,,,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40',
'47,,,,,29,32,35,41,44,49,54,58,63,66,,,,,1,,,21,26,,,,,43,2,7,55,59',
'67,30,,36,39,,48,12,,22,,33,37,,45,,51,56,,,,,,74,4,9,15,19,24,,,,40',
'47,,,,29,32,35,41,44,49,54,58,63,66,,,,,,,,,,,,,,,,2,7,59,67,,30,,36',
'39,,48,,,,,,,45,,,56,,,,,,,,,,,,,,,,,,,29,32,35,41,44,49,54,58,63,66',
',,,,1,,,21,26,,,,,43,,,55,59,67,68,,30,,36,39,12,48,22,,33,37,,45,,51',
'56,,,,,,74,4,9,15,19,24,,,,40,47,,,,29,32,35,41,44,49,54,58,63,66,,',
',,,,,,,,,,,,,2,7,59,67,,30,,36,39,,48,,,,,,,45,,,56,,,136,,144,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,132,138,,,,152,,,,166,,,,,,30,,36,39,163,48',
',,,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160,164',
'168,130,134,139,142,146,149,153,156,159,162,167,129,133,137,141,145',
'148,136,,144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,132,138,,,,152,,,,166,,,,',
',,,,,163,,,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157',
'160,164,168,130,134,139,142,146,149,153,156,159,162,167,129,133,204',
'141,145,148,136,,144,,,,,,,,,,,,,,,,,,,,,,,321,,,,,,,132,138,,,,152',
',,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169,131,135,140,143,147',
'150,154,157,160,164,168,130,134,139,142,146,149,153,156,159,162,167',
'129,133,137,141,145,148,136,,144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,132,138',
',,,152,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169,131,135,140',
'143,147,150,154,157,160,164,168,130,134,139,142,146,149,153,156,159',
'162,167,129,133,137,141,145,148,136,,144,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,132,138,,,,152,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169,131',
'135,140,143,147,150,154,157,160,164,168,130,134,139,142,146,149,153',
'156,159,162,167,129,133,137,141,145,148,136,,144,,,,,,,,,,,,,,,,,,,',
',,,323,,,,,,,132,138,,,,152,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161',
'165,169,131,135,140,143,147,150,154,157,160,164,168,130,134,139,142',
'146,149,153,156,159,162,167,129,133,137,141,145,148,136,,144,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,132,138,,,,152,,,,166,,,,,,,,,,163,,,,,,,151,155',
'158,161,165,169,131,135,140,143,147,150,154,157,160,164,168,130,134',
'139,142,146,149,153,156,159,162,167,129,133,137,141,145,148,136,,144',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,132,138,,,,152,,,,166,,,,,,,,,,163,,,,',
',,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160,164,168',
'130,134,139,142,146,149,153,156,159,162,167,129,133,137,141,145,148',
'136,,144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,132,138,,,,152,,,,166,,,,,,,,',
',163,,,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160',
'164,168,130,134,139,142,146,149,153,156,159,162,167,129,133,137,141',
'145,148,136,,144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,132,138,,,,152,,,,166',
',,,,,,,,,163,,,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154',
'157,160,164,168,130,134,139,142,146,149,153,156,159,162,167,129,133',
'137,141,145,148,136,,144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,132,138,,,,152',
',,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169,131,135,140,143,147',
'150,154,157,160,164,168,130,134,139,142,146,149,153,156,159,162,167',
'129,133,137,141,145,148,136,,144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,132,138',
',,,152,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169,131,135,140',
'143,147,150,154,157,160,164,168,130,134,139,142,146,149,153,156,159',
'162,167,129,133,137,141,145,148,136,,144,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,132,138,,,,152,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169,131',
'135,140,143,147,150,154,157,160,164,168,130,134,139,142,146,149,153',
'156,159,162,167,129,133,137,141,145,148,136,,144,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,132,138,,,,152,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165',
'169,131,135,140,143,147,150,154,157,160,164,168,130,134,139,142,146',
'149,153,156,159,162,167,129,133,137,141,145,148,136,,144,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,132,138,,,,152,,,,166,,,,,,,,,,163,,,,,,,151,155,158',
'161,165,169,131,135,140,143,147,150,154,157,160,164,168,130,134,139',
'142,146,149,153,156,159,162,167,129,133,137,141,145,148,136,,144,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,132,138,,,,152,,,,166,,,,,,,,,,163,,,,,,,151',
'155,158,161,165,169,131,135,140,143,147,150,154,157,160,164,168,130',
'134,139,142,146,149,153,156,159,162,167,129,133,137,141,145,148,136',
',144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,132,138,,,,152,,,,166,,,,,,,,,,163',
',,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160,164',
'168,130,134,139,142,146,149,153,156,159,162,167,129,133,137,141,145',
'148,136,,144,,,,,,,,,,,,,,,,,,,,,,,273,,,,,,,132,138,,,,152,,,,166,',
',,,,,,,,163,,,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154',
'157,160,164,168,130,134,139,142,146,149,153,156,159,162,167,129,133',
'272,141,145,148,136,,144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,132,138,,,,152',
',,,166,,,,,,,,185,,163,,,,,,,151,155,158,161,165,169,131,135,140,143',
'147,150,154,157,160,164,168,130,134,139,142,146,149,153,156,159,162',
'167,129,133,137,141,145,148,136,,144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,132',
'138,,,,152,,,,166,,,,,,,,61,,163,,,,,,,151,155,158,161,165,169,131,135',
'140,143,147,150,154,157,160,164,168,130,134,139,142,146,149,153,156',
'159,162,167,129,133,137,141,145,148,136,,144,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,132,138,,,,152,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169',
'131,135,140,143,147,150,154,157,160,164,168,130,134,139,142,146,149',
'153,156,159,162,167,129,133,137,141,145,148,136,,144,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,132,138,,,,152,,,,166,,,,,,,,61,,163,,,,,,,151,155,158',
'161,165,169,131,135,140,143,147,150,154,157,160,164,168,130,134,139',
'142,146,149,153,156,159,162,167,129,133,137,141,145,148,132,138,,,,',
',,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169,131,135,140,143,147',
'150,154,157,160,164,168,130,134,139,142,146,149,153,156,159,162,167',
'129,133,137,141,145,148,132,138,,,,,,,,166,,,,,,,,,,163,,,,,,,151,155',
'158,161,165,169,131,135,140,143,147,150,154,157,160,164,168,130,134',
'139,142,146,149,153,156,159,162,167,129,133,137,141,145,148,132,138',
',,,,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169,131,135,140,143',
'147,150,154,157,160,164,168,130,134,139,142,146,149,153,156,159,162',
'167,129,133,137,132,138,,,,,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161',
'165,169,131,135,140,143,147,150,154,157,160,164,168,130,134,139,142',
'146,149,153,156,159,162,167,129,133,137,132,138,,,,,,,,166,,,,,,,,,',
'163,,,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160',
'164,168,130,134,139,142,146,149,153,156,159,162,167,129,133,137,132',
'138,,,,,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169,131,135,140',
'143,147,150,154,157,160,164,168,130,134,139,142,146,149,153,156,159',
'162,167,129,133,137,138,,,,,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161',
'165,169,131,135,140,143,147,150,154,157,160,164,168,130,134,139,142',
'146,149,153,156,159,162,167,129,133,137,138,,,,,,,,166,,,,,,,,,,163',
',,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160,164',
'168,130,134,139,142,146,149,153,156,159,162,167,129,133,137,138,,,,',
',,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169,131,135,140,143,147',
'150,154,157,160,164,168,130,134,139,142,146,149,153,156,159,162,167',
'129,133,137,138,,,,,,,,166,,,,,,,,,,163,,,,,,,151,155,158,161,165,169',
'131,135,140,143,147,150,154,157,160,164,168,130,134,139,142,146,149',
'153,156,159,162,167,129,133,137,138,,,,,,,,166,,,,,,,,,,163,,,,,,,151',
'155,158,161,165,169,131,135,140,143,147,150,154,157,160,164,168,130',
'134,139,142,146,149,153,156,159,162,167,129,133,137,166,,,,,,,,,,163',
',,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160,164',
'168,130,134,139,142,146,149,153,156,159,162,167,129,133,166,,,,,,,,',
',163,,,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160',
'164,168,130,134,139,142,146,149,153,156,159,162,167,129,133,166,,,,',
',,,,,163,,,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157',
'160,164,168,130,134,139,142,146,149,153,156,159,162,167,129,133,163',
',,,,,,151,155,158,161,165,169,131,135,140,143,147,150,154,157,160,164',
'168,130,134,139,142,146,149,153,156,159,162,167,129,133,163,,,,,,,151',
'155,158,161,165,169,131,135,140,143,147,150,154,157,160,164,168,130',
'134,139,142,146,149,153,156,159,162,167,129,133,163,,,,,,,151,155,158',
'161,165,169,131,135,140,143,147,150,154,157,160,164,168,130,134,139',
'142,146,149,153,156,159,162,167,129,133,163,,,,,,,151,155,158,161,165',
'169,131,135,140,143,147,150,154,157,160,164,168,130,134,139,142,146',
'149,153,156,159,162,167,129,133,163,,,,,,,151,155,158,161,165,169,131',
'135,140,143,147,150,154,157,160,164,168,130,134,139,142,146,149,153',
'156,159,162,167,129,133' ]
        racc_action_table = arr = Array.new(11069, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'120,84,120,163,163,163,163,163,163,163,163,163,163,73,73,73,207,163',
'78,206,163,163,73,272,73,36,163,119,293,163,163,163,120,120,119,119',
'293,120,163,205,163,120,163,163,73,163,204,163,163,294,84,120,261,261',
'163,163,163,163,120,120,120,120,120,120,120,120,120,120,120,120,120',
'120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120',
'120,120,120,120,73,163,163,68,78,294,163,198,163,163,103,163,120,103',
'103,103,103,103,103,103,103,103,103,211,192,115,280,103,219,219,103',
'103,214,214,198,186,103,263,281,103,103,103,103,186,191,60,214,103,103',
'124,103,192,103,103,117,103,37,103,103,103,177,117,117,224,103,103,103',
'103,103,103,115,115,115,103,103,263,185,115,186,198,198,198,260,263',
'185,30,263,311,311,191,191,191,99,30,124,124,192,192,192,174,99,118',
'118,103,103,75,174,174,103,77,103,103,4,103,81,4,4,4,4,4,4,4,4,4,4,296',
'186,186,30,4,30,188,4,4,5,99,97,99,4,188,266,4,4,4,4,289,289,98,266',
'4,4,106,4,107,4,4,243,4,108,4,4,70,70,243,243,94,4,4,4,4,4,4,94,94,188',
'4,4,226,96,96,96,258,96,266,226,226,226,226,226,226,226,226,226,226',
'226,226,226,226,226,226,226,226,226,226,226,4,4,178,178,1,4,43,4,4,300',
'4,312,300,300,300,300,300,300,300,300,300,300,91,91,91,137,300,71,71',
'300,300,91,122,91,132,300,90,125,300,300,300,300,176,90,90,,300,300',
',300,,300,300,246,300,,300,300,126,126,246,246,,300,300,300,300,300',
'300,236,,,300,300,,,236,236,236,236,236,236,236,236,236,236,236,236',
'236,236,236,236,236,236,236,236,236,300,86,,,,300,300,,86,86,300,,300',
'300,6,300,,6,6,6,6,6,6,6,6,6,6,34,34,34,,6,,,6,6,34,,34,,6,250,,6,6',
'6,6,,250,250,,6,6,,6,,6,6,79,6,,6,6,,,79,79,,6,6,6,6,6,6,229,,,6,6,',
',229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229',
'229,229,229,229,92,92,92,,,6,6,,,92,6,92,6,6,9,6,,9,9,9,9,9,9,9,9,9',
'9,255,255,255,,9,,,9,9,255,,255,,9,89,,9,9,9,9,,89,89,,9,9,,9,,9,9,',
'9,,9,9,,,,,,9,9,9,9,9,9,217,,,9,9,,,217,217,217,217,217,217,217,217',
'217,217,217,217,217,217,217,217,217,217,217,217,217,256,256,256,,,9',
'9,,,256,9,256,9,9,11,9,,11,11,11,11,11,11,11,11,11,11,,,,,11,,,11,11',
',,,,11,,,11,11,11,11,,,,,11,11,,11,,11,11,,11,,11,11,,,,,,11,11,11,11',
'11,11,241,,,11,11,,,241,241,241,241,241,241,241,241,241,241,241,241',
'241,241,241,241,241,241,241,241,241,,,,,,11,11,,,,11,,11,11,12,11,,12',
'12,12,12,12,12,12,12,12,12,,,,,12,,,12,12,,,,,12,,,12,12,12,12,,,,,12',
'12,,12,,12,12,,12,,12,12,,,,,,12,12,12,12,12,12,221,,,12,12,,,221,221',
'221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221',
'221,221,,,,,,12,12,,,,12,,12,12,15,12,,15,15,15,15,15,15,15,15,15,15',
',,,,15,,,15,15,,,,,15,,,15,15,15,15,,,,,15,15,,15,,15,15,,15,,15,15',
',,,,,15,15,15,15,15,15,233,,,15,15,,,233,233,233,233,233,233,233,233',
'233,233,233,233,233,233,233,233,233,233,233,233,233,,,,,,15,15,,,,15',
',15,15,19,15,,19,19,19,19,19,19,19,19,19,19,,,,,19,,,19,19,,,,,19,,',
'19,19,19,19,,,,,19,19,,19,,19,19,,19,,19,19,,,,,,19,19,19,19,19,19,239',
',,19,19,,,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239',
'239,239,239,239,239,239,,,,,,19,19,,,,19,,19,19,288,19,,288,288,288',
'288,288,288,288,288,288,288,,,,,288,,,288,288,,,,,288,,,288,288,288',
'288,,,,,288,288,,288,,288,288,,288,,288,288,,,,,,288,288,288,288,288',
'288,242,,,288,288,,,242,242,242,242,242,242,242,242,242,242,242,242',
'242,218,,,,,,,218,218,218,218,218,,288,288,,,,288,,288,288,22,288,,22',
'22,22,22,22,22,22,22,22,22,,,,,22,,,22,22,,,,,22,,,22,22,22,22,,,,,22',
'22,,22,,22,22,,22,,22,22,,,,,,22,22,22,22,22,22,249,,,22,22,,,249,249',
'249,249,249,249,249,249,249,249,249,249,249,254,,,,,,,254,254,254,254',
'254,,22,22,,,,22,,22,22,24,22,,24,24,24,24,24,24,24,24,24,24,,,,,24',
',,24,24,,,,,24,,,24,24,24,24,,,,,24,24,,24,,24,24,,24,,24,24,,,,,,24',
'24,24,24,24,24,245,,,24,24,,,245,245,245,245,245,245,245,245,245,245',
'245,245,245,,,,,,,,,,,,,,24,24,,,,24,,24,24,287,24,,287,287,287,287',
'287,287,287,287,287,287,,,,,287,,,287,287,,,,,287,,,287,287,287,287',
',,,,287,287,,287,,287,287,,287,,287,287,,,,,,287,287,287,287,287,287',
'253,,,287,287,,,253,253,253,253,253,253,253,253,253,253,253,253,253',
',,,,,,,,,,,,,287,287,,,,287,,287,287,279,287,,279,279,279,279,279,279',
'279,279,279,279,,,,,279,,,279,279,,,,,279,,,279,279,279,279,,,,,279',
'279,,279,,279,279,,279,,279,279,,,,,,279,279,279,279,279,279,237,,,279',
'279,,,237,237,237,237,237,237,237,237,237,237,,,,,,,,,,,,279,,,,,279',
'279,,,,279,,279,279,33,279,,33,33,33,33,33,33,33,33,33,33,,,,,33,,,33',
'33,,,,,33,,,33,33,33,33,,,,,33,33,,33,,33,33,,33,,33,33,,,,,,33,33,33',
'33,33,33,240,,,33,33,,,240,240,240,240,240,240,240,240,240,240,227,',
',,,,,227,227,227,227,227,227,227,,,33,33,,,,33,,33,33,276,33,,276,276',
'276,276,276,276,276,276,276,276,,,,,276,,,276,276,,,,,276,,,276,276',
'276,276,,,,,276,276,,276,,276,276,,276,,276,276,,,,,,276,276,276,276',
'276,276,234,,,276,276,,,234,234,234,234,234,234,234,234,234,234,222',
',,,,,,222,222,222,222,222,222,222,,,276,276,,,,276,,276,276,275,276',
',275,275,275,275,275,275,275,275,275,275,,,,,275,,,275,275,,,,,275,',
',275,275,275,275,,,,,275,275,,275,,275,275,,275,,275,275,,,,,,275,275',
'275,275,275,275,230,,,275,275,,,230,230,230,230,230,230,230,,,,,,,,',
',,,,,,,,,,,275,275,,,,275,,275,275,262,275,,262,262,262,262,262,262',
'262,262,262,262,,,,,262,,,262,262,,,,,262,,,262,262,262,262,,,,,262',
'262,,262,,262,262,,262,,262,262,,,,,,262,262,262,262,262,262,,,,262',
'262,,,,,,,,,,,,,,,,,,,,,,,,,,,,,262,262,,,,262,,262,262,39,262,,39,39',
'39,39,39,39,39,39,39,39,,,,,39,,,39,39,,,,,39,,,39,39,39,39,,,,,39,39',
',39,,39,39,,39,,39,39,39,,,,,39,39,39,39,39,39,,,,39,39,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,39,39,,,,39,,39,39,40,39,,40,40,40,40,40,40,40,40,40',
'40,,,,,40,,,40,40,,,,,40,,,40,40,40,40,,,,,40,40,,40,,40,40,,40,,40',
'40,,,,,,40,40,40,40,40,40,,,,40,40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,40,40',
',,,40,,40,40,129,40,,129,129,129,129,129,129,129,129,129,129,,,,,129',
',,129,129,,,,,129,,,129,129,129,129,,,,,129,129,,129,,129,129,,129,',
'129,129,,,,,,129,129,129,129,129,129,,,,129,129,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,129,129,,,,129,,129,129,47,129,,47,47,47,47,47,47,47,47,47,47',
',,,,47,,,47,47,,,,,47,,,47,47,47,47,,,,,47,47,,47,,47,47,,47,,47,47',
',,,,,47,47,47,47,47,47,,,,47,47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,47,47,,',
',47,,47,47,48,47,,48,48,48,48,48,48,48,48,48,48,,,,,48,,,48,48,,,,,48',
',,48,48,48,48,,,,,48,48,,48,,48,48,,48,,48,48,,,,,,48,48,48,48,48,48',
',,,48,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,48,48,,,,48,,48,48,55,48,,55,55',
'55,55,55,55,55,55,55,55,,,,,55,,,55,55,,,,,55,,,55,55,55,55,,,,,55,55',
',55,,55,55,,55,,55,55,,,,,,55,55,55,55,55,55,,,,55,55,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,55,55,,,,55,,55,55,212,55,,212,212,212,212,212,212,212',
'212,212,212,,,,,212,,,212,212,,,,,212,,,212,212,212,212,,,,,212,212',
',212,,212,212,,212,,212,212,,,,,,212,212,212,212,212,212,,,,212,212',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,212,212,,,,212,,212,212,61,212,,61,61,61',
'61,61,61,61,61,61,61,,,,,61,,,61,61,,,,,61,,,61,61,61,61,,,,,61,61,',
'61,,61,61,,61,,61,61,,61,,,,61,61,61,61,61,61,,,,61,61,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,61,61,,,,61,,61,61,203,61,,203,203,203,203,203,203,203',
'203,203,203,,,,,203,,,203,203,,,,,203,,,203,203,203,203,,,,,203,203',
',203,,203,203,,203,,203,203,,,,,,203,203,203,203,203,203,,,,203,203',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,203,203,,,,203,,203,203,200,203,,200,200',
'200,200,200,200,200,200,200,200,,,,,200,,,200,200,,,,,200,,,200,200',
'200,200,,,,,200,200,,200,,200,200,,200,,200,200,200,,,,,200,200,200',
'200,200,200,,,,200,200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,200,200,200,200,',
'200,,200,200,190,200,,190,190,190,190,190,190,190,190,190,190,,,,,190',
',,190,190,,,,,190,,,190,190,190,190,,,,,190,190,,190,,190,190,,190,',
'190,190,,,,,,190,190,190,190,190,190,,,,190,190,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,190,190,,,,190,,190,190,189,190,,189,189,189,189,189,189,189',
'189,189,189,,,,,189,,,189,189,,,,,189,,,189,189,189,189,,,,,189,189',
',189,,189,189,,189,,189,189,,,,,,189,189,189,189,189,189,,,,189,189',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,189,189,,,,189,,189,189,172,189,,172,172',
'172,172,172,172,172,172,172,172,,,,,172,,,172,172,,,,,172,,,172,172',
'172,172,,,,,172,172,,172,,172,172,,172,,172,172,,,,,,172,172,172,172',
'172,172,,,,172,172,,,,,,,,,,,,,,,,,,,,,,,,,,,,,172,172,,,,172,,172,172',
'74,172,,74,74,74,74,74,74,74,74,74,74,,,,,74,,,74,74,,,,,74,,,74,74',
'74,74,,,,,74,74,,74,,74,74,,74,,74,74,,,,,,74,74,74,74,74,74,,,,74,74',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,74,74,,,,74,,74,74,169,74,,169,169,169,169',
'169,169,169,169,169,169,,,,,169,,,169,169,,,,,169,,,169,169,169,169',
',,,,169,169,,169,,169,169,,169,,169,169,,,,,,169,169,169,169,169,169',
',,,169,169,,,,,,,,,,,,,,,,,,,,,,,,,,,,,169,169,,,,169,,169,169,168,169',
',168,168,168,168,168,168,168,168,168,168,,,,,168,,,168,168,,,,,168,',
',168,168,168,168,,,,,168,168,,168,,168,168,,168,,168,168,,,,,,168,168',
'168,168,168,168,,,,168,168,,,,,,,,,,,,,,,,,,,,,,,,,,,,,168,168,,,,168',
',168,168,167,168,,167,167,167,167,167,167,167,167,167,167,,,,,167,,',
'167,167,,,,,167,,,167,167,167,167,,,,,167,167,,167,,167,167,,167,,167',
'167,,,,,,167,167,167,167,167,167,,,,167,167,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,167,167,,,,167,,167,167,166,167,,166,166,166,166,166,166,166,166',
'166,166,,,,,166,,,166,166,,,,,166,,,166,166,166,166,,,,,166,166,,166',
',166,166,,166,,166,166,,,,,,166,166,166,166,166,166,,,,166,166,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,166,166,,,,166,,166,166,165,166,,165,165,165',
'165,165,165,165,165,165,165,,,,,165,,,165,165,,,,,165,,,165,165,165',
'165,,,,,165,165,,165,,165,165,,165,,165,165,,,,,,165,165,165,165,165',
'165,,,,165,165,,,,,,,,,,,,,,,,,,,,,,,,,,,,,165,165,,,,165,,165,165,164',
'165,,164,164,164,164,164,164,164,164,164,164,,,,,164,,,164,164,,,,,164',
',,164,164,164,164,,,,,164,164,,164,,164,164,,164,,164,164,,,,,,164,164',
'164,164,164,164,,,,164,164,,,,,,,,,,,,,,,,,,,,,,,,,,,,,164,164,,,,164',
',164,164,162,164,,162,162,162,162,162,162,162,162,162,162,,,,,162,,',
'162,162,,,,,162,,,162,162,162,162,,,,,162,162,,162,,162,162,,162,,162',
'162,,,,,,162,162,162,162,162,162,,,,162,162,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,162,162,,,,162,,162,162,161,162,,161,161,161,161,161,161,161,161',
'161,161,,,,,161,,,161,161,,,,,161,,,161,161,161,161,,,,,161,161,,161',
',161,161,,161,,161,161,,,,,,161,161,161,161,161,161,,,,161,161,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,161,161,,,,161,,161,161,160,161,,160,160,160',
'160,160,160,160,160,160,160,,,,,160,,,160,160,,,,,160,,,160,160,160',
'160,,,,,160,160,,160,,160,160,,160,,160,160,,,,,,160,160,160,160,160',
'160,,,,160,160,,,,,,,,,,,,,,,,,,,,,,,,,,,,,160,160,,,,160,,160,160,159',
'160,,159,159,159,159,159,159,159,159,159,159,,,,,159,,,159,159,,,,,159',
',,159,159,159,159,,,,,159,159,,159,,159,159,,159,,159,159,,,,,,159,159',
'159,159,159,159,,,,159,159,,,,,,,,,,,,,,,,,,,,,,,,,,,,,159,159,,,,159',
',159,159,158,159,,158,158,158,158,158,158,158,158,158,158,,,,,158,,',
'158,158,,,,,158,,,158,158,158,158,,,,,158,158,,158,,158,158,,158,,158',
'158,,,,,,158,158,158,158,158,158,,,,158,158,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,158,158,,,,158,,158,158,157,158,,157,157,157,157,157,157,157,157',
'157,157,,,,,157,,,157,157,,,,,157,,,157,157,157,157,,,,,157,157,,157',
',157,157,,157,,157,157,,,,,,157,157,157,157,157,157,,,,157,157,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,157,157,,,,157,,157,157,156,157,,156,156,156',
'156,156,156,156,156,156,156,,,,,156,,,156,156,,,,,156,,,156,156,156',
'156,,,,,156,156,,156,,156,156,,156,,156,156,,,,,,156,156,156,156,156',
'156,,,,156,156,,,,,,,,,,,,,,,,,,,,,,,,,,,,,156,156,,,,156,,156,156,154',
'156,,154,154,154,154,154,154,154,154,154,154,,,,,154,,,154,154,,,,,154',
',,154,154,154,154,,,,,154,154,,154,,154,154,,154,,154,154,,,,,,154,154',
'154,154,154,154,,,,154,154,,,,,,,,,,,,,,,,,,,,,,,,,,,,,154,154,,,,154',
',154,154,153,154,,153,153,153,153,153,153,153,153,153,153,,,,,153,,',
'153,153,,,,,153,,,153,153,153,153,,,,,153,153,,153,,153,153,,153,,153',
'153,,,,,,153,153,153,153,153,153,,,,153,153,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,153,153,,,,153,,153,153,152,153,,152,152,152,152,152,152,152,152',
'152,152,,,,,152,,,152,152,,,,,152,,,152,152,152,152,,,,,152,152,,152',
',152,152,,152,,152,152,,,,,,152,152,152,152,152,152,,,,152,152,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,152,152,,,,152,,152,152,150,152,,150,150,150',
'150,150,150,150,150,150,150,,,,,150,,,150,150,,,,,150,,,150,150,150',
'150,,,,,150,150,,150,,150,150,,150,,150,150,,,,,,150,150,150,150,150',
'150,,,,150,150,,,,,,,,,,,,,,,,,,,,,,,,,,,,,150,150,,,,150,,150,150,149',
'150,,149,149,149,149,149,149,149,149,149,149,,,,,149,,,149,149,,,,,149',
',,149,149,149,149,,,,,149,149,,149,,149,149,,149,,149,149,,,,,,149,149',
'149,149,149,149,,,,149,149,,,,,,,,,,,,,,,,,,,,,,,,,,,,,149,149,,,,149',
',149,149,148,149,,148,148,148,148,148,148,148,148,148,148,,,,,148,,',
'148,148,,,,,148,,,148,148,148,148,,,,,148,148,,148,,148,148,,148,,148',
'148,,,,,,148,148,148,148,148,148,,,,148,148,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,148,148,,,,148,,148,148,147,148,,147,147,147,147,147,147,147,147',
'147,147,,,,,147,,,147,147,,,,,147,,,147,147,147,147,,,,,147,147,,147',
',147,147,,147,,147,147,,,,,,147,147,147,147,147,147,,,,147,147,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,147,147,,,,147,,147,147,146,147,,146,146,146',
'146,146,146,146,146,146,146,,,,,146,,,146,146,,,,,146,,,146,146,146',
'146,,,,,146,146,,146,,146,146,,146,,146,146,,,,,,146,146,146,146,146',
'146,,,,146,146,,,,,,,,,,,,,,,,,,,,,,,,,,,,,146,146,,,,146,,146,146,145',
'146,,145,145,145,145,145,145,145,145,145,145,,,,,145,,,145,145,,,,,145',
',,145,145,145,145,,,,,145,145,,145,,145,145,,145,,145,145,,,,,,145,145',
'145,145,145,145,,,,145,145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,145,145,,,,145',
',145,145,310,145,,310,310,310,310,310,310,310,310,310,310,,,,,310,,',
'310,310,,,,,310,,,310,310,310,310,,,,,310,310,,310,,310,310,,310,,310',
'310,,,,,,310,310,310,310,310,310,,,,310,310,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,310,310,,,,310,,310,310,105,310,,105,105,105,105,105,105,105,105',
'105,105,,,,,105,,,105,105,,,,,105,,,105,105,105,105,,,,,105,105,,105',
',105,105,,105,,105,105,,,,,,105,105,105,105,105,105,,,,105,105,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,105,105,,,,105,,105,105,144,105,,144,144,144',
'144,144,144,144,144,144,144,,,,,144,,,144,144,,,,,144,,,144,144,144',
'144,,,,,144,144,,144,,144,144,,144,,144,144,,,,,,144,144,144,144,144',
'144,,,,144,144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144,144,,,,144,,144,144,143',
'144,,143,143,143,143,143,143,143,143,143,143,,,,,143,,,143,143,,,,,143',
',,143,143,143,143,,,,,143,143,,143,,143,143,,143,,143,143,,,,,,143,143',
'143,143,143,143,,,,143,143,,,,,,,,,,,,,,,,,,,,,,,,,,,,,143,143,,,,143',
',143,143,142,143,,142,142,142,142,142,142,142,142,142,142,,,,,142,,',
'142,142,,,,,142,,,142,142,142,142,,,,,142,142,,142,,142,142,,142,,142',
'142,,,,,,142,142,142,142,142,142,,,,142,142,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,142,142,,,,142,,142,142,113,142,,113,113,113,113,113,113,113,113',
'113,113,,,,,113,,,113,113,,,,,113,,,113,113,113,113,,,,,113,113,,113',
',113,113,,113,,113,113,113,,,,,113,113,113,113,113,113,,,,113,113,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,113,113,,,,113,,113,113,114,113,,114,114,114',
'114,114,114,114,114,114,114,,,,,114,,,114,114,,,,,114,,,114,114,114',
'114,,,,,114,114,,114,,114,114,,114,,114,114,,,,,,114,114,114,114,114',
'114,,,,114,114,,,,,,,,,,,,,,,,,,,,,,,,,,,,,114,114,,,,114,,114,114,141',
'114,,141,141,141,141,141,141,141,141,141,141,,,,,141,,,141,141,,,,,141',
',,141,141,141,141,,,,,141,141,,141,,141,141,,141,,141,141,,,,,,141,141',
'141,141,141,141,,,,141,141,,,,,,,,,,,,,,,,,,,,,,,,,,,,,141,141,,,,141',
',141,141,140,141,,140,140,140,140,140,140,140,140,140,140,,,,,140,,',
'140,140,,,,,140,,,140,140,140,140,,,,,140,140,,140,,140,140,,140,,140',
'140,,,,,,140,140,140,140,140,140,,,,140,140,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,140,140,,,,140,,140,140,139,140,,139,139,139,139,139,139,139,139',
'139,139,,,,,139,,,139,139,,,,,139,,,139,139,139,139,,,,,139,139,,139',
',139,139,,139,,139,139,,,,,,139,139,139,139,139,139,,,,139,139,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,139,139,,,,139,,139,139,138,139,,138,138,138',
'138,138,138,138,138,138,138,,,,,138,,,138,138,,,,,138,,,138,138,138',
'138,,,,,138,138,,138,,138,138,,138,,138,138,,,,,,138,138,138,138,138',
'138,,,,138,138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,138,138,,,,138,,138,138,136',
'138,,136,136,136,136,136,136,136,136,136,136,,,,,136,,,136,136,,,,,136',
',,136,136,136,136,,,,,136,136,,136,,136,136,,136,,136,136,,,,,,136,136',
'136,136,136,136,,,,136,136,,,,,,,,,,,,,,,,,,,,,,,,,,,,,136,136,,,,136',
',136,136,0,136,,0,0,0,0,0,0,0,0,0,0,,,,,0,,,0,0,,,,,0,,,0,0,0,0,,,,',
'0,0,,0,,0,0,,0,,0,0,0,,,,,0,0,0,0,0,0,,,,0,0,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,0,0,0,0,,0,,0,0,135,0,,135,135,135,135,135,135,135,135,135,135',
',,,,135,,,135,135,,,,,135,,,135,135,135,135,,,,,135,135,,135,,135,135',
',135,,135,135,,,,,,135,135,135,135,135,135,,,,135,135,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,135,135,,,,135,,135,135,134,135,,134,134,134,134,134,134',
'134,134,134,134,,,,,134,,,134,134,,,,,134,,,134,134,134,134,,,,,134',
'134,,134,,134,134,,134,,134,134,,,,,,134,134,134,134,134,134,,,,134',
'134,,,,,,,,,,,,,,,,,,,,,,,,,,,,,134,134,,,,134,,134,134,133,134,,133',
'133,133,133,133,133,133,133,133,133,,,,,133,,,133,133,,,,,133,,,133',
'133,133,133,,,,,133,133,,133,,133,133,,133,,133,133,,,,,,133,133,133',
'133,133,133,,,,133,133,,,,,,,,,,,,,,,,,,,,,,,,,,,,,133,133,,,,133,,133',
'133,131,133,,131,131,131,131,131,131,131,131,131,131,,,,,131,,,131,131',
',,,,131,,,131,131,131,131,,,,,131,131,,131,,131,131,,131,,131,131,,',
',,,131,131,131,131,131,131,,,,131,131,,,,,,,,,,,,,,,,,,,,,,,,,,,,,131',
'131,,,,131,,131,131,130,131,,130,130,130,130,130,130,130,130,130,130',
',,,,130,,,130,130,,,,,130,,,130,130,130,130,,,,,130,130,,130,,130,130',
',130,,130,130,,,,,,130,130,130,130,130,130,,,,130,130,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,130,130,,,,130,,130,130,127,130,,127,127,127,127,127,127',
'127,127,127,127,,,,,127,,,127,127,,,,,127,,,127,127,127,127,,,,,127',
'127,,127,,127,127,,127,,127,127,,,,,,127,127,127,127,127,127,,,,127',
'127,,,,,,,,,,,,,,,,,,,,,,,,,,,,,127,127,,,,127,,127,127,213,127,,213',
'213,213,213,213,213,213,213,213,213,,,,,213,,,213,213,,,,,213,,,213',
'213,213,213,,,,,213,213,,213,,213,213,,213,,213,213,,,315,,315,213,213',
'213,213,213,213,,,,213,213,,,,,,,,,,,,,,,,,,,315,315,,,,315,,,,315,213',
'213,,,,213,,213,213,315,213,,,,,,315,315,315,315,315,315,315,315,315',
'315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315',
'315,315,315,315,315,315,315,315,304,,304,,,,,,,,315,,,,,,,,,,,,,,,,',
',,,,,304,304,,,,304,,,,304,,,,,,,,,,304,,,,,,,304,304,304,304,304,304',
'304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304',
'304,304,304,304,304,304,304,304,304,304,304,303,303,303,303,303,303',
'303,303,303,303,304,,,,303,,,303,303,,,,,303,,,303,303,303,,,,,,,303',
',303,,303,303,,303,,303,303,,,,,,303,303,303,303,303,303,,,,303,303',
',,,,313,313,313,313,313,313,313,313,313,313,,,,,313,,,313,313,,,,,313',
'303,303,313,313,313,303,,303,303,,303,313,,313,,313,313,,313,,313,313',
',,,,,313,313,313,313,313,313,,,,313,313,,,,171,171,171,171,171,171,171',
'171,171,171,,,,,,,,,,,,,,,,313,313,171,171,,313,,313,313,,313,,,,,,',
'171,,,171,,,,,,,,,,,,,,,,,,,26,26,26,26,26,26,26,26,26,26,,,,,26,,,26',
'26,,,,,26,,,26,26,26,26,,171,,171,171,26,171,26,,26,26,,26,,26,26,,',
',,,26,26,26,26,26,26,,,,26,26,,,,21,21,21,21,21,21,21,21,21,21,,,,,',
',,,,,,,,,,26,26,21,21,,26,,26,26,,26,,,,,,,21,,,21,,,215,,215,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,215,215,,,,215,,,,215,,,,,,21,,21,21,215,21,',
',,,,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215',
'215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215',
'215,116,,116,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,116,116,,,,116,,,,116,,,,',
',,,,,116,,,,,,,116,116,116,116,116,116,116,116,116,116,116,116,116,116',
'116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116',
'116,116,116,314,,314,,,,,,,,,,,,,,,,,,,,,,,314,,,,,,,314,314,,,,314',
',,,314,,,,,,,,,,314,,,,,,,314,314,314,314,314,314,314,314,314,314,314',
'314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314',
'314,314,314,314,314,314,223,,223,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223,223',
',,,223,,,,223,,,,,,,,,,223,,,,,,,223,223,223,223,223,223,223,223,223',
'223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223',
'223,223,223,223,223,223,223,223,238,,238,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,238,238,,,,238,,,,238,,,,,,,,,,238,,,,,,,238,238,238,238,238,238,238',
'238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238',
'238,238,238,238,238,238,238,238,238,238,320,,320,,,,,,,,,,,,,,,,,,,',
',,,320,,,,,,,320,320,,,,320,,,,320,,,,,,,,,,320,,,,,,,320,320,320,320',
'320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320',
'320,320,320,320,320,320,320,320,320,320,320,320,320,231,,231,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,231,231,,,,231,,,,231,,,,,,,,,,231,,,,,,,231,231',
'231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231',
'231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,72,,72,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,72,72,,,,72,,,,72,,,,,,,,,,72,,,,,,,72,72',
'72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72',
'72,72,72,72,72,72,72,72,72,302,,302,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,302',
'302,,,,302,,,,302,,,,,,,,,,302,,,,,,,302,302,302,302,302,302,302,302',
'302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302',
'302,302,302,302,302,302,302,302,302,301,,301,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,301,301,,,,301,,,,301,,,,,,,,,,301,,,,,,,301,301,301,301,301,301',
'301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301',
'301,301,301,301,301,301,301,301,301,301,301,268,,268,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,268,268,,,,268,,,,268,,,,,,,,,,268,,,,,,,268,268,268,268',
'268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268',
'268,268,268,268,268,268,268,268,268,268,268,268,268,317,,317,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,317,317,,,,317,,,,317,,,,,,,,,,317,,,,,,,317,317',
'317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317',
'317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,269,,269',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,269,269,,,,269,,,,269,,,,,,,,,,269,,,,',
',,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269',
'269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269',
'277,,277,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,277,277,,,,277,,,,277,,,,,,,,',
',277,,,,,,,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277',
'277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277',
'277,277,278,,278,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,278,278,,,,278,,,,278',
',,,,,,,,,278,,,,,,,278,278,278,278,278,278,278,278,278,278,278,278,278',
'278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278',
'278,278,278,278,199,,199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,199,199,,,,199',
',,,199,,,,,,,,,,199,,,,,,,199,199,199,199,199,199,199,199,199,199,199',
'199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199',
'199,199,199,199,199,199,295,,295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,295,295',
',,,295,,,,295,,,,,,,,,,295,,,,,,,295,295,295,295,295,295,295,295,295',
'295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295',
'295,295,295,295,295,295,295,295,194,,194,,,,,,,,,,,,,,,,,,,,,,,194,',
',,,,,194,194,,,,194,,,,194,,,,,,,,,,194,,,,,,,194,194,194,194,194,194',
'194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194',
'194,194,194,194,194,194,194,194,194,194,194,88,,88,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,88,88,,,,88,,,,88,,,,,,,,88,,88,,,,,,,88,88,88,88,88,88',
'88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88',
'88,88,88,88,88,87,,87,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,87,87,,,,87,,,,87',
',,,,,,,87,,87,,,,,,,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87',
'87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,193,,193,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,193,193,,,,193,,,,193,,,,,,,,,,193,,,,,,,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,85,',
'85,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,85,85,,,,85,,,,85,,,,,,,,85,,85,,,,',
',,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85',
'85,85,85,85,85,85,85,85,85,85,85,85,257,257,,,,,,,,257,,,,,,,,,,257',
',,,,,,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257',
'257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257',
'257,95,95,,,,,,,,95,,,,,,,,,,95,,,,,,,95,95,95,95,95,95,95,95,95,95',
'95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95',
'95,235,235,,,,,,,,235,,,,,,,,,,235,,,,,,,235,235,235,235,235,235,235',
'235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235',
'235,235,235,235,235,235,235,121,121,,,,,,,,121,,,,,,,,,,121,,,,,,,121',
'121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121',
'121,121,121,121,121,121,121,121,121,121,121,121,121,232,232,,,,,,,,232',
',,,,,,,,,232,,,,,,,232,232,232,232,232,232,232,232,232,232,232,232,232',
'232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232',
'232,228,228,,,,,,,,228,,,,,,,,,,228,,,,,,,228,228,228,228,228,228,228',
'228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228',
'228,228,228,228,228,228,228,225,,,,,,,,225,,,,,,,,,,225,,,,,,,225,225',
'225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225',
'225,225,225,225,225,225,225,225,225,225,225,225,308,,,,,,,,308,,,,,',
',,,,308,,,,,,,308,308,308,308,308,308,308,308,308,308,308,308,308,308',
'308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308',
'285,,,,,,,,285,,,,,,,,,,285,,,,,,,285,285,285,285,285,285,285,285,285',
'285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285',
'285,285,285,285,285,284,,,,,,,,284,,,,,,,,,,284,,,,,,,284,284,284,284',
'284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284',
'284,284,284,284,284,284,284,284,284,284,307,,,,,,,,307,,,,,,,,,,307',
',,,,,,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307',
'307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,251,,,,',
',,,,,251,,,,,,,251,251,251,251,251,251,251,251,251,251,251,251,251,251',
'251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,93,',
',,,,,,,,93,,,,,,,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93',
'93,93,93,93,93,93,93,93,93,93,93,93,93,102,,,,,,,,,,102,,,,,,,102,102',
'102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102',
'102,102,102,102,102,102,102,102,102,102,102,216,,,,,,,216,216,216,216',
'216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216',
'216,216,216,216,216,216,216,216,216,244,,,,,,,244,244,244,244,244,244',
'244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244',
'244,244,244,244,244,244,244,220,,,,,,,220,220,220,220,220,220,220,220',
'220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220',
'220,220,220,220,220,252,,,,,,,252,252,252,252,252,252,252,252,252,252',
'252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252',
'252,252,252,247,,,,,,,247,247,247,247,247,247,247,247,247,247,247,247',
'247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247',
'247' ]
        racc_action_check = arr = Array.new(11069, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  6832,   281,   nil,   nil,   202,   223,   406,   nil,   nil,   508,
   nil,   610,   712,   nil,   nil,   814,   nil,   nil,   nil,   916,
   nil,  8038,  1120,   nil,  1222,   nil,  7973,   nil,   nil,   nil,
   171,   nil,   nil,  1528,   406,   nil,    11,   124,   nil,  1936,
  2038,   nil,   nil,   252,   nil,   nil,   nil,  2242,  2344,   nil,
   nil,   nil,   nil,   nil,   nil,  2446,   nil,   nil,   nil,   nil,
   137,  2650,   nil,   nil,   nil,   nil,   nil,   nil,    81,   nil,
   156,   227,  8733,    -2,  3262,   146,   nil,   111,    -3,   399,
   nil,   203,   nil,   nil,    -1, 10021,   342,  9837,  9745,   484,
   280,   304,   481, 10747,   204, 10141,   173,   134,   145,   178,
   nil,   nil, 10794,   100,   nil,  5710,   229,   231,   236,   nil,
   nil,   nil,   nil,  6118,  6220,    65,  8181,    93,   164,   -26,
    -2, 10258,   329,   nil,    89,   235,   320,  7444,   nil,  2140,
  7342,  7240,   317,  7138,  7036,  6934,  6730,   232,  6628,  6526,
  6424,  6322,  6016,  5914,  5812,  5506,  5404,  5302,  5200,  5098,
  4996,   nil,  4894,  4792,  4690,   nil,  4588,  4486,  4384,  4282,
  4180,  4078,  3976,    -2,  3874,  3772,  3670,  3568,  3466,  3364,
   nil,  7909,  3160,   nil,   138,   nil,   249,   132,   204,   nil,
   nil,   nil,   nil,   nil,   nil,   127,   121,   nil,   217,  3058,
  2956,    84,    91,  9929,  9653,   nil,   nil,   nil,    74,  9469,
  2854,   nil,   nil,  2752,   -44,     9,     5,   -35,   nil,   nil,
   nil,   101,  2548,  7546,    87,  8089, 10831,   517,  1047,    85,
 10905,   721,  1656,  8365,    65, 10428,   216,  1554, 10372,   415,
  1741,  8641, 10315,   823,  1639, 10201,   313,  1435,  8457,   925,
  1537,   619,  1027,   195, 10868,  1231,   297, 10979,   nil,  1129,
   382, 10700, 10942,  1333,  1149,   508,   583, 10081,   183,   nil,
   123,   -45,  1834,   126,   nil,   nil,   226,   nil,  9009,  9193,
   nil,   nil,   -67,   nil,   nil,  1732,  1630,  9285,  9377,  1426,
    67,    79,   nil,   nil, 10596, 10540,   nil,  1324,  1018,   200,
   nil,   nil,   nil,   -13,    -2,  9561,   166,   nil,   nil,   nil,
   304,  8917,  8825,  7778,  7689,   nil,   nil, 10652, 10484,   nil,
  5608,    82,   256,  7844,  8273,  7597,   nil,  9101,   nil,   nil,
  8549,   nil,   nil,   nil ]

racc_action_default = [
    -1,  -186,   -97,    -9,  -186,  -179,  -186,   -98,   -10,  -186,
  -106,  -186,  -186,   -26,   -11,  -186,  -107,   -27,   -12,  -186,
  -108,  -186,  -186,   -13,  -186,  -109,   -46,   -14,  -110,   -28,
  -120,   -15,   -29,  -186,  -126,   -31,  -134,  -186,   -16,  -141,
  -186,   -35,   -17,  -186,   -36,   -34,   -18,  -186,  -186,   -37,
   -19,   -47,   -20,  -128,   -38,  -186,   -30,   -21,   -39,   -32,
  -186,  -186,   -22,   -40,    -2,   -23,  -104,   -33,  -186,  -105,
    -3,  -186,    -5,    -8,  -186,  -186,   -99,  -101,  -186,   -48,
  -177,  -179,  -181,  -183,  -186,  -158,   -49,  -186,  -186,   -53,
   -55,  -186,  -127,   -56,   -54,   -45,  -186,  -186,  -186,  -120,
   -44,  -121,   -57,  -141,  -131,  -186,  -186,  -186,  -186,  -112,
  -116,  -117,  -135,  -141,  -186,  -186,  -142,   -51,  -186,   -50,
  -186,  -155,  -186,   -25,  -186,  -162,  -186,    -7,    -4,  -186,
  -186,  -186,  -186,  -186,  -186,  -186,  -186,  -186,  -186,  -186,
  -186,  -186,  -186,  -186,  -186,  -186,  -186,  -186,  -186,  -186,
  -186,   -59,  -186,  -186,  -186,   -58,  -186,  -186,  -186,  -186,
  -186,  -186,  -186,   -94,  -186,  -186,  -186,  -186,  -186,  -186,
  -130,  -186,  -186,  -111,   -52,   -96,  -186,  -186,  -186,  -178,
  -182,  -180,  -176,  -157,  -175,  -186,  -186,  -119,  -186,  -186,
  -186,  -186,  -186,  -142,  -186,  -113,  -114,  -115,  -186,  -143,
  -186,  -140,  -148,  -186,  -186,  -151,  -186,  -186,  -156,   324,
   -24,  -186,  -186,  -186,  -186,    -6,   -87,   -75,   -64,  -186,
   -88,   -76,   -65,  -184,  -186,   -93,   -77,   -66,   -89,   -78,
   -67,  -185,   -90,   -79,   -68,   -91,   -80,   -69,  -159,   -81,
   -70,   -82,   -71,   -60,   -84,   -72,   -61,   -85,   -83,   -73,
   -62,   -92,   -86,   -74,   -63,  -129,  -186,   -41,  -186,  -100,
  -186,  -186,  -186,  -186,  -170,  -122,  -186,  -123,   -42,   -43,
  -125,  -132,  -186,  -118,  -133,  -186,  -186,  -144,  -145,  -186,
  -186,  -186,  -152,  -163,  -164,  -165,  -161,  -186,  -186,  -160,
  -103,  -102,   -95,  -186,  -186,  -149,  -186,  -168,  -171,  -124,
  -186,  -147,  -146,  -103,  -186,  -153,  -154,  -167,  -166,  -174,
  -186,  -172,  -186,  -103,  -186,  -186,  -136,  -150,  -173,  -169,
  -186,  -138,  -137,  -139 ]

racc_goto_table = [
    64,   173,   170,    71,    76,   264,   214,    79,    91,    85,
    80,   265,    86,   267,    87,    88,   126,    82,    89,   173,
   170,   115,    90,   100,    92,    93,    60,    94,    96,    95,
   294,   263,   205,    70,   182,   260,   102,    81,    78,    83,
   nil,   nil,   116,   117,   nil,   nil,   118,   nil,   nil,   nil,
   119,   120,   nil,   nil,   nil,   nil,   nil,   nil,   121,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   127,   128,   nil,   nil,   nil,   nil,   nil,   174,   175,   nil,
   219,   nil,   nil,   298,   nil,   192,   179,   181,   183,   nil,
   184,   299,   100,   180,   124,   198,   188,   191,   nil,   289,
   nil,   nil,   nil,   nil,   nil,   nil,   193,   nil,   194,   nil,
   nil,   nil,   nil,   309,   nil,   nil,   193,   199,   nil,   nil,
   nil,   nil,   nil,   nil,   127,   nil,   nil,   nil,   nil,   nil,
   215,   nil,   216,   217,   218,   nil,   220,   221,   222,   223,
   nil,   225,   226,   227,   228,   229,   230,   231,   232,   233,
   234,   235,   236,   237,   nil,   238,   239,   240,   255,   241,
   242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
   252,   253,   254,   nil,   256,   257,   nil,   nil,   261,   100,
   259,   100,   nil,   173,   170,   nil,   266,   nil,   nil,   nil,
   nil,   188,   268,   269,   nil,   nil,   nil,   nil,   nil,   nil,
   276,   nil,   nil,   277,   nil,   nil,   278,   nil,   nil,   nil,
   282,   nil,   nil,   nil,   nil,   284,   285,   286,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   261,   nil,   nil,   100,
   nil,   293,   nil,   292,   nil,   295,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   301,   302,
   nil,   nil,   304,   305,   306,   nil,   261,   nil,   nil,   nil,
   307,   308,   nil,   nil,   nil,   nil,   nil,   311,   nil,   312,
   nil,   nil,   nil,   314,   nil,   nil,   315,   nil,   nil,   nil,
   nil,   318,   nil,   317,   nil,   nil,   320 ]

racc_goto_check = [
     2,    32,    38,     4,    26,    45,    43,     5,     6,     5,
    47,    23,     5,    23,     5,     5,    42,    49,     5,    32,
    38,    39,     5,    21,    33,     5,     1,     5,    36,     5,
    40,    44,    41,     3,    46,    25,     5,    48,    24,    50,
   nil,   nil,     5,     5,   nil,   nil,     4,   nil,   nil,   nil,
     5,     5,   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2,     2,   nil,   nil,   nil,   nil,   nil,     5,     4,   nil,
    42,   nil,   nil,    45,   nil,    39,    47,     4,     4,   nil,
     4,    23,    21,    49,     3,    39,     2,    36,   nil,    43,
   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,     5,   nil,
   nil,   nil,   nil,    45,   nil,   nil,     5,     5,   nil,   nil,
   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
     5,   nil,     5,     5,     5,   nil,     5,     5,     5,     5,
   nil,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     5,     5,     5,     5,   nil,     5,     5,     5,     6,     5,
     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     5,     5,     5,   nil,    33,     5,   nil,   nil,    21,    21,
    26,    21,   nil,    32,    38,   nil,     2,   nil,   nil,   nil,
   nil,     2,     5,     5,   nil,   nil,   nil,   nil,   nil,   nil,
     2,   nil,   nil,     5,   nil,   nil,     5,   nil,   nil,   nil,
     4,   nil,   nil,   nil,   nil,     5,     5,     4,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,    21,
   nil,     2,   nil,     4,   nil,     5,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,     5,
   nil,   nil,     5,     4,     4,   nil,    21,   nil,   nil,   nil,
     5,     5,   nil,   nil,   nil,   nil,   nil,     4,   nil,     4,
   nil,   nil,   nil,     5,   nil,   nil,     5,   nil,   nil,   nil,
   nil,     2,   nil,     5,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,    26,     0,    33,     3,     3,   -13,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    -7,   nil,  -175,    37,  -143,     3,   nil,   nil,   nil,
   nil,   nil,   -72,     3,   nil,   nil,    -2,   nil,   -71,   -18,
  -232,   -86,   -52,  -120,  -154,  -180,   -50,     5,    32,    12,
    34 ]

racc_goto_default = [
   nil,   nil,   203,   nil,   nil,    72,    73,     3,     8,    14,
    18,    23,    27,    31,    38,    42,    46,    50,    52,    57,
    62,    65,    69,   101,   nil,    75,   nil,    10,    16,    20,
    25,    28,   109,    34,   110,   111,   nil,    53,   104,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,   nil,   nil,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 108, :_reduce_1,
  1, 108, :_reduce_2,
  1, 108, :_reduce_3,
  2, 108, :_reduce_4,
  1, 110, :_reduce_5,
  3, 110, :_reduce_6,
  2, 110, :_reduce_7,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  3, 111, :_reduce_24,
  2, 111, :_reduce_25,
  1, 109, :_reduce_none,
  1, 109, :_reduce_none,
  1, 129, :_reduce_28,
  1, 129, :_reduce_29,
  1, 129, :_reduce_30,
  1, 129, :_reduce_31,
  1, 129, :_reduce_32,
  1, 129, :_reduce_33,
  1, 129, :_reduce_34,
  1, 129, :_reduce_35,
  1, 129, :_reduce_36,
  1, 129, :_reduce_37,
  1, 129, :_reduce_38,
  1, 129, :_reduce_39,
  1, 129, :_reduce_40,
  3, 117, :_reduce_41,
  3, 130, :_reduce_42,
  3, 130, :_reduce_43,
  1, 130, :_reduce_44,
  2, 121, :_reduce_45,
  1, 121, :_reduce_46,
  1, 128, :_reduce_47,
  2, 116, :_reduce_48,
  2, 116, :_reduce_49,
  2, 116, :_reduce_50,
  2, 116, :_reduce_51,
  2, 116, :_reduce_52,
  2, 116, :_reduce_53,
  2, 116, :_reduce_54,
  2, 116, :_reduce_55,
  2, 116, :_reduce_56,
  2, 116, :_reduce_57,
  2, 116, :_reduce_58,
  2, 116, :_reduce_59,
  3, 116, :_reduce_60,
  3, 116, :_reduce_61,
  3, 116, :_reduce_62,
  3, 116, :_reduce_63,
  3, 116, :_reduce_64,
  3, 116, :_reduce_65,
  3, 116, :_reduce_66,
  3, 116, :_reduce_67,
  3, 116, :_reduce_68,
  3, 116, :_reduce_69,
  3, 116, :_reduce_70,
  3, 116, :_reduce_71,
  3, 116, :_reduce_72,
  3, 116, :_reduce_73,
  3, 116, :_reduce_74,
  3, 116, :_reduce_75,
  3, 116, :_reduce_76,
  3, 116, :_reduce_77,
  3, 116, :_reduce_78,
  3, 116, :_reduce_79,
  3, 116, :_reduce_80,
  3, 116, :_reduce_81,
  3, 116, :_reduce_82,
  3, 116, :_reduce_83,
  3, 116, :_reduce_84,
  3, 116, :_reduce_85,
  3, 116, :_reduce_86,
  3, 116, :_reduce_87,
  3, 116, :_reduce_88,
  3, 116, :_reduce_89,
  3, 116, :_reduce_90,
  3, 116, :_reduce_91,
  3, 116, :_reduce_92,
  3, 116, :_reduce_93,
  2, 127, :_reduce_94,
  5, 115, :_reduce_95,
  2, 115, :_reduce_96,
  1, 132, :_reduce_97,
  1, 132, :_reduce_98,
  1, 131, :_reduce_99,
  3, 131, :_reduce_100,
  1, 133, :_reduce_none,
  4, 133, :_reduce_102,
  4, 126, :_reduce_103,
  1, 113, :_reduce_104,
  1, 113, :_reduce_105,
  1, 113, :_reduce_106,
  1, 113, :_reduce_107,
  1, 113, :_reduce_108,
  1, 113, :_reduce_109,
  1, 113, :_reduce_110,
  2, 113, :_reduce_111,
  2, 113, :_reduce_112,
  2, 139, :_reduce_113,
  2, 139, :_reduce_114,
  2, 139, :_reduce_115,
  1, 139, :_reduce_116,
  1, 139, :_reduce_117,
  3, 141, :_reduce_118,
  3, 135, :_reduce_119,
  0, 143, :_reduce_120,
  1, 143, :_reduce_121,
  3, 143, :_reduce_122,
  3, 143, :_reduce_123,
  4, 143, :_reduce_124,
  3, 143, :_reduce_125,
  1, 114, :_reduce_126,
  2, 114, :_reduce_127,
  1, 114, :_reduce_128,
  3, 125, :_reduce_129,
  2, 140, :_reduce_130,
  2, 140, :_reduce_131,
  3, 145, :_reduce_132,
  4, 144, :_reduce_133,
  1, 138, :_reduce_134,
  2, 138, :_reduce_135,
  6, 137, :_reduce_136,
  7, 137, :_reduce_137,
  6, 142, :_reduce_138,
  7, 142, :_reduce_139,
  3, 134, :_reduce_140,
  0, 146, :_reduce_141,
  1, 146, :_reduce_142,
  2, 146, :_reduce_143,
  3, 146, :_reduce_144,
  3, 146, :_reduce_145,
  4, 146, :_reduce_146,
  4, 146, :_reduce_147,
  2, 146, :_reduce_148,
  1, 147, :_reduce_149,
  3, 147, :_reduce_150,
  3, 119, :_reduce_151,
  4, 119, :_reduce_152,
  5, 119, :_reduce_153,
  3, 148, :_reduce_154,
  2, 120, :_reduce_155,
  3, 136, :_reduce_156,
  3, 122, :_reduce_157,
  2, 122, :_reduce_158,
  3, 122, :_reduce_159,
  4, 123, :_reduce_160,
  4, 123, :_reduce_161,
  1, 149, :_reduce_162,
  3, 149, :_reduce_163,
  2, 150, :_reduce_164,
  2, 150, :_reduce_165,
  3, 150, :_reduce_166,
  3, 150, :_reduce_167,
  5, 124, :_reduce_168,
  7, 124, :_reduce_169,
  1, 151, :_reduce_170,
  2, 151, :_reduce_171,
  3, 152, :_reduce_172,
  4, 152, :_reduce_173,
  3, 152, :_reduce_174,
  3, 153, :_reduce_175,
  2, 154, :_reduce_176,
  1, 155, :_reduce_177,
  2, 155, :_reduce_178,
  0, 156, :_reduce_179,
  2, 156, :_reduce_180,
  1, 157, :_reduce_181,
  2, 157, :_reduce_182,
  2, 118, :_reduce_183,
  3, 118, :_reduce_184,
  3, 118, :_reduce_185 ]

racc_reduce_n = 186

racc_shift_n = 324

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :UNLESS => 4,
  :NUMBER => 5,
  :STRING => 6,
  :REGEX => 7,
  :TRUE => 8,
  :FALSE => 9,
  :YES => 10,
  :NO => 11,
  :ON => 12,
  :OFF => 13,
  :IDENTIFIER => 14,
  :PROPERTY_ACCESS => 15,
  :PROTOTYPE_ACCESS => 16,
  :SOAK_ACCESS => 17,
  :CODE => 18,
  :PARAM_START => 19,
  :PARAM => 20,
  :PARAM_END => 21,
  :NEW => 22,
  :RETURN => 23,
  :CALL_START => 24,
  :CALL_END => 25,
  :INDEX_START => 26,
  :INDEX_END => 27,
  :TRY => 28,
  :CATCH => 29,
  :FINALLY => 30,
  :THROW => 31,
  :BREAK => 32,
  :CONTINUE => 33,
  :FOR => 34,
  :IN => 35,
  :OF => 36,
  :BY => 37,
  :WHEN => 38,
  :WHILE => 39,
  :SWITCH => 40,
  :LEADING_WHEN => 41,
  :DELETE => 42,
  :INSTANCEOF => 43,
  :TYPEOF => 44,
  :SUPER => 45,
  :EXTENDS => 46,
  :ARGUMENTS => 47,
  :NEWLINE => 48,
  :COMMENT => 49,
  :JS => 50,
  :INDENT => 51,
  :OUTDENT => 52,
  "?" => 53,
  :UMINUS => 54,
  :UPLUS => 55,
  :NOT => 56,
  "!" => 57,
  "!!" => 58,
  "~" => 59,
  "++" => 60,
  "--" => 61,
  "*" => 62,
  "/" => 63,
  "%" => 64,
  "+" => 65,
  "-" => 66,
  "<<" => 67,
  ">>" => 68,
  ">>>" => 69,
  "&" => 70,
  "|" => 71,
  "^" => 72,
  "<=" => 73,
  "<" => 74,
  ">" => 75,
  ">=" => 76,
  "==" => 77,
  "!=" => 78,
  :IS => 79,
  :ISNT => 80,
  "&&" => 81,
  "||" => 82,
  :AND => 83,
  :OR => 84,
  "-=" => 85,
  "+=" => 86,
  "/=" => 87,
  "*=" => 88,
  "%=" => 89,
  "." => 90,
  "||=" => 91,
  "&&=" => 92,
  "?=" => 93,
  :ASSIGN => 94,
  "->" => 95,
  "=>" => 96,
  "\n" => 97,
  ";" => 98,
  "," => 99,
  "{" => 100,
  "}" => 101,
  "@" => 102,
  "[" => 103,
  "]" => 104,
  "(" => 105,
  ")" => 106 }

racc_nt_base = 107

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "UNLESS",
  "NUMBER",
  "STRING",
  "REGEX",
  "TRUE",
  "FALSE",
  "YES",
  "NO",
  "ON",
  "OFF",
  "IDENTIFIER",
  "PROPERTY_ACCESS",
  "PROTOTYPE_ACCESS",
  "SOAK_ACCESS",
  "CODE",
  "PARAM_START",
  "PARAM",
  "PARAM_END",
  "NEW",
  "RETURN",
  "CALL_START",
  "CALL_END",
  "INDEX_START",
  "INDEX_END",
  "TRY",
  "CATCH",
  "FINALLY",
  "THROW",
  "BREAK",
  "CONTINUE",
  "FOR",
  "IN",
  "OF",
  "BY",
  "WHEN",
  "WHILE",
  "SWITCH",
  "LEADING_WHEN",
  "DELETE",
  "INSTANCEOF",
  "TYPEOF",
  "SUPER",
  "EXTENDS",
  "ARGUMENTS",
  "NEWLINE",
  "COMMENT",
  "JS",
  "INDENT",
  "OUTDENT",
  "\"?\"",
  "UMINUS",
  "UPLUS",
  "NOT",
  "\"!\"",
  "\"!!\"",
  "\"~\"",
  "\"++\"",
  "\"--\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"<<\"",
  "\">>\"",
  "\">>>\"",
  "\"&\"",
  "\"|\"",
  "\"^\"",
  "\"<=\"",
  "\"<\"",
  "\">\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "IS",
  "ISNT",
  "\"&&\"",
  "\"||\"",
  "AND",
  "OR",
  "\"-=\"",
  "\"+=\"",
  "\"/=\"",
  "\"*=\"",
  "\"%=\"",
  "\".\"",
  "\"||=\"",
  "\"&&=\"",
  "\"?=\"",
  "ASSIGN",
  "\"->\"",
  "\"=>\"",
  "\"\\n\"",
  "\";\"",
  "\",\"",
  "\"{\"",
  "\"}\"",
  "\"@\"",
  "\"[\"",
  "\"]\"",
  "\"(\"",
  "\")\"",
  "$start",
  "Root",
  "Terminator",
  "Expressions",
  "Block",
  "Expression",
  "Value",
  "Call",
  "Code",
  "Operation",
  "Assign",
  "If",
  "Try",
  "Throw",
  "Return",
  "While",
  "For",
  "Switch",
  "Extends",
  "Splat",
  "Existence",
  "Comment",
  "Literal",
  "AssignObj",
  "ParamList",
  "FuncGlyph",
  "Param",
  "Array",
  "Object",
  "Parenthetical",
  "Range",
  "This",
  "Accessor",
  "Invocation",
  "Index",
  "Slice",
  "AssignList",
  "Super",
  "Arguments",
  "ArgList",
  "SimpleArgs",
  "Catch",
  "ForVariables",
  "ForSource",
  "Whens",
  "When",
  "IfBlock",
  "ElsIf",
  "ElsIfs",
  "ElseBody",
  "IfEnd" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 49)
  def _reduce_1(val, _values, result)
     result = Expressions.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 50)
  def _reduce_2(val, _values, result)
     result = Expressions.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 51)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 52)
  def _reduce_4(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 57)
  def _reduce_5(val, _values, result)
     result = Expressions.wrap(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 58)
  def _reduce_6(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 59)
  def _reduce_7(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'grammar.y', 86)
  def _reduce_24(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 87)
  def _reduce_25(val, _values, result)
     result = Expressions.new 
    result
  end
.,.,

# reduce 26 omitted

# reduce 27 omitted

module_eval(<<'.,.,', 'grammar.y', 98)
  def _reduce_28(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 99)
  def _reduce_29(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 100)
  def _reduce_30(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 101)
  def _reduce_31(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 102)
  def _reduce_32(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 103)
  def _reduce_33(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 104)
  def _reduce_34(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 105)
  def _reduce_35(val, _values, result)
     result = LiteralNode.new(Value.new(true)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 106)
  def _reduce_36(val, _values, result)
     result = LiteralNode.new(Value.new(false)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 107)
  def _reduce_37(val, _values, result)
     result = LiteralNode.new(Value.new(true)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 108)
  def _reduce_38(val, _values, result)
     result = LiteralNode.new(Value.new(false)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 109)
  def _reduce_39(val, _values, result)
     result = LiteralNode.new(Value.new(true)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 110)
  def _reduce_40(val, _values, result)
     result = LiteralNode.new(Value.new(false)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 115)
  def _reduce_41(val, _values, result)
     result = AssignNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 120)
  def _reduce_42(val, _values, result)
     result = AssignNode.new(ValueNode.new(val[0]), val[2], :object) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 121)
  def _reduce_43(val, _values, result)
     result = AssignNode.new(ValueNode.new(LiteralNode.new(val[0])), val[2], :object) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 122)
  def _reduce_44(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 127)
  def _reduce_45(val, _values, result)
     result = ReturnNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 128)
  def _reduce_46(val, _values, result)
     result = ReturnNode.new(ValueNode.new(Value.new('null'))) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 133)
  def _reduce_47(val, _values, result)
     result = CommentNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 140)
  def _reduce_48(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 141)
  def _reduce_49(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 142)
  def _reduce_50(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 143)
  def _reduce_51(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 144)
  def _reduce_52(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 145)
  def _reduce_53(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 146)
  def _reduce_54(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 147)
  def _reduce_55(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 148)
  def _reduce_56(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 149)
  def _reduce_57(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 150)
  def _reduce_58(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 151)
  def _reduce_59(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 153)
  def _reduce_60(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 154)
  def _reduce_61(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 155)
  def _reduce_62(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 157)
  def _reduce_63(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 158)
  def _reduce_64(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 160)
  def _reduce_65(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 161)
  def _reduce_66(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 162)
  def _reduce_67(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 164)
  def _reduce_68(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 165)
  def _reduce_69(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 166)
  def _reduce_70(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 168)
  def _reduce_71(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 169)
  def _reduce_72(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 170)
  def _reduce_73(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 171)
  def _reduce_74(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 173)
  def _reduce_75(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 174)
  def _reduce_76(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 175)
  def _reduce_77(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 176)
  def _reduce_78(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 178)
  def _reduce_79(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 179)
  def _reduce_80(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 180)
  def _reduce_81(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 181)
  def _reduce_82(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 182)
  def _reduce_83(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 184)
  def _reduce_84(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 185)
  def _reduce_85(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 186)
  def _reduce_86(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 187)
  def _reduce_87(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 188)
  def _reduce_88(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 189)
  def _reduce_89(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 190)
  def _reduce_90(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 191)
  def _reduce_91(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 193)
  def _reduce_92(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 194)
  def _reduce_93(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 199)
  def _reduce_94(val, _values, result)
     result = ExistenceNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 205)
  def _reduce_95(val, _values, result)
     result = CodeNode.new(val[1], val[4], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 206)
  def _reduce_96(val, _values, result)
     result = CodeNode.new([], val[1], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 211)
  def _reduce_97(val, _values, result)
     result = :func 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 212)
  def _reduce_98(val, _values, result)
     result = :boundfunc 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 217)
  def _reduce_99(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 218)
  def _reduce_100(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

# reduce 101 omitted

module_eval(<<'.,.,', 'grammar.y', 224)
  def _reduce_102(val, _values, result)
     result = SplatNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 229)
  def _reduce_103(val, _values, result)
     result = SplatNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 234)
  def _reduce_104(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 235)
  def _reduce_105(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 236)
  def _reduce_106(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 237)
  def _reduce_107(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 238)
  def _reduce_108(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 239)
  def _reduce_109(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 240)
  def _reduce_110(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 241)
  def _reduce_111(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 242)
  def _reduce_112(val, _values, result)
     result = ValueNode.new(val[0], [val[1]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 247)
  def _reduce_113(val, _values, result)
     result = AccessorNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 248)
  def _reduce_114(val, _values, result)
     result = AccessorNode.new(val[1], :prototype) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 249)
  def _reduce_115(val, _values, result)
     result = AccessorNode.new(val[1], :soak) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 250)
  def _reduce_116(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 251)
  def _reduce_117(val, _values, result)
     result = SliceNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 256)
  def _reduce_118(val, _values, result)
     result = IndexNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 261)
  def _reduce_119(val, _values, result)
     result = ObjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 266)
  def _reduce_120(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 267)
  def _reduce_121(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 268)
  def _reduce_122(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 269)
  def _reduce_123(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 271)
  def _reduce_124(val, _values, result)
     result = val[0] << val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 272)
  def _reduce_125(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 277)
  def _reduce_126(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 278)
  def _reduce_127(val, _values, result)
     result = val[1].new_instance 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 279)
  def _reduce_128(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 284)
  def _reduce_129(val, _values, result)
     result = ExtendsNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 289)
  def _reduce_130(val, _values, result)
     result = CallNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 290)
  def _reduce_131(val, _values, result)
     result = CallNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 295)
  def _reduce_132(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 300)
  def _reduce_133(val, _values, result)
     result = CallNode.new(Value.new('super'), val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 305)
  def _reduce_134(val, _values, result)
     result = ThisNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 306)
  def _reduce_135(val, _values, result)
     result = ThisNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 312)
  def _reduce_136(val, _values, result)
     result = RangeNode.new(val[1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 314)
  def _reduce_137(val, _values, result)
     result = RangeNode.new(val[1], val[5], true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 320)
  def _reduce_138(val, _values, result)
     result = RangeNode.new(val[1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 322)
  def _reduce_139(val, _values, result)
     result = RangeNode.new(val[1], val[5], true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 327)
  def _reduce_140(val, _values, result)
     result = ArrayNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 332)
  def _reduce_141(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 333)
  def _reduce_142(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 334)
  def _reduce_143(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 335)
  def _reduce_144(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 336)
  def _reduce_145(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 337)
  def _reduce_146(val, _values, result)
     result = val[0] << val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 338)
  def _reduce_147(val, _values, result)
     result = val[0] << val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 339)
  def _reduce_148(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 344)
  def _reduce_149(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 345)
  def _reduce_150(val, _values, result)
     result = ([val[0]] << val[2]).flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 350)
  def _reduce_151(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 351)
  def _reduce_152(val, _values, result)
     result = TryNode.new(val[1], nil, nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 353)
  def _reduce_153(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 358)
  def _reduce_154(val, _values, result)
     result = [val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 363)
  def _reduce_155(val, _values, result)
     result = ThrowNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 368)
  def _reduce_156(val, _values, result)
     result = ParentheticalNode.new(val[1], val[0].line) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 373)
  def _reduce_157(val, _values, result)
     result = WhileNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 374)
  def _reduce_158(val, _values, result)
     result = WhileNode.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 375)
  def _reduce_159(val, _values, result)
     result = WhileNode.new(val[2], Expressions.wrap(val[0])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 382)
  def _reduce_160(val, _values, result)
     result = ForNode.new(val[0], val[3], val[2][0], val[2][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 383)
  def _reduce_161(val, _values, result)
     result = ForNode.new(val[3], val[2], val[1][0], val[1][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 388)
  def _reduce_162(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 389)
  def _reduce_163(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 394)
  def _reduce_164(val, _values, result)
     result = {:source => val[1]} 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 395)
  def _reduce_165(val, _values, result)
     result = {:source => val[1], :object => true} 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 397)
  def _reduce_166(val, _values, result)
     result = val[0].merge(:filter => val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 399)
  def _reduce_167(val, _values, result)
     result = val[0].merge(:step => val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 405)
  def _reduce_168(val, _values, result)
     result = val[3].rewrite_condition(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 407)
  def _reduce_169(val, _values, result)
     result = val[3].rewrite_condition(val[1]).add_else(val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 412)
  def _reduce_170(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 413)
  def _reduce_171(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 418)
  def _reduce_172(val, _values, result)
     result = IfNode.new(val[1], val[2], nil, {:statement => true}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 420)
  def _reduce_173(val, _values, result)
     result = IfNode.new(val[1], val[2], nil, {:statement => true}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 421)
  def _reduce_174(val, _values, result)
     result = val[2].add_comment(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 426)
  def _reduce_175(val, _values, result)
     result = IfNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 431)
  def _reduce_176(val, _values, result)
     result = val[1].force_statement 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 436)
  def _reduce_177(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 437)
  def _reduce_178(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 442)
  def _reduce_179(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 443)
  def _reduce_180(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 448)
  def _reduce_181(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 449)
  def _reduce_182(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 454)
  def _reduce_183(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 455)
  def _reduce_184(val, _values, result)
     result = IfNode.new(val[2], Expressions.wrap(val[0]), nil, {:statement => true}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 456)
  def _reduce_185(val, _values, result)
     result = IfNode.new(val[2], Expressions.wrap(val[0]), nil, {:statement => true, :invert => true}) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser

end
