#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

module CoffeeScript

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 404)
  # Lex and parse a CoffeeScript.
  def parse(code)
    # Uncomment the following line to enable grammar debugging, in combination
    # with the -g flag in the Rake build task.
    # @yydebug = true
    @tokens = Lexer.new.tokenize(code)
    do_parse
  end

  # Retrieve the next token from the list.
  def next_token
    @tokens.shift
  end

  # Raise a custom error class that knows about line numbers.
  def on_error(error_token_id, error_value, value_stack)
    raise ParseError.new(token_to_str(error_token_id), error_value, value_stack)
  end

...end grammar.y/module_eval...
##### State transition tables begin ###

clist = [
'75,240,83,17,21,26,32,35,41,48,51,53,56,253,204,22,27,224,-161,-161',
'68,222,19,23,84,82,87,90,93,96,103,82,87,90,93,96,3,117,22,27,118,151',
'7,22,27,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101,105',
'71,73,77,80,85,88,91,94,97,100,104,114,114,76,79,108,108,114,114,145',
'114,45,7,54,228,17,21,26,32,35,41,48,51,53,56,108,114,64,66,1,4,108',
'64,13,19,23,28,152,37,40,243,49,142,57,59,260,144,68,3,124,139,108,142',
'15,25,30,34,39,43,47,139,142,142,58,207,82,87,-161,-161,139,139,115',
'115,68,239,127,109,115,115,238,115,109,127,68,109,141,108,22,27,224',
'251,18,68,68,211,36,115,45,7,54,127,17,21,26,32,35,41,48,51,53,56,215',
'114,64,66,1,4,-161,-161,13,19,23,28,215,37,40,215,49,157,57,59,108,113',
'68,3,-161,-161,22,27,15,25,30,34,39,43,47,197,195,157,58,-161,-161,230',
'22,27,216,82,87,-161,-161,227,262,-161,-161,225,22,27,216,22,27,216',
'22,27,246,124,112,241,18,82,87,108,36,115,45,7,54,109,17,21,26,32,35',
'41,48,51,53,56,215,211,64,66,1,4,210,108,13,19,23,28,282,37,40,,49,142',
'57,59,271,,68,3,,139,,,15,25,30,34,39,43,47,,,,58,,,,22,27,216,,217',
'253,68,,141,,,,68,,,272,82,87,90,93,96,99,102,,18,,,,36,,45,7,54,,17',
'21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57',
'59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,82,87,90,93,96,99,102,106,72',
'74,78,81,86,89,92,95,98,101,105,71,73,,,,,,,18,,,,36,,45,7,54,,17,21',
'26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59',
',,68,3,,,,,15,25,30,34,39,43,47,,,,58,82,87,90,93,96,99,102,106,72,74',
'78,81,86,89,92,95,98,101,105,71,73,,,268,,,,18,,,,36,,45,7,54,,17,21',
'26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59',
',,68,3,,,,,15,25,30,34,39,43,47,,,,58,82,87,90,93,96,99,102,106,72,74',
'78,81,86,89,92,95,98,101,105,71,73,,,,,,,18,,,,36,,45,7,54,,17,21,26',
'32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68',
'3,,,,,15,25,30,34,39,43,47,,,,58,82,87,90,93,96,99,102,106,72,74,78',
'81,86,89,92,95,98,101,105,71,73,,,,,,,18,,,,36,,45,7,54,,17,21,26,32',
'35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3',
',,,,15,25,30,34,39,43,47,,,,58,82,87,90,93,96,99,102,106,72,74,78,81',
'86,89,92,95,98,101,105,71,73,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35',
'41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,',
',,15,25,30,34,39,43,47,,,,58,82,87,90,93,96,99,102,106,72,74,78,81,86',
'89,92,95,98,101,105,71,73,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41',
'48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15',
'25,30,34,39,43,47,,,,58,82,87,90,93,96,99,102,106,72,74,78,81,86,89',
'92,95,98,101,105,71,73,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48',
'51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25',
'30,34,39,43,47,,,,58,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92',
'95,98,101,105,71,73,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51',
'53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30',
'34,39,43,47,,,,58,82,87,90,93,96,99,102,106,72,74,78,81,86,82,87,90',
'93,96,99,102,106,72,74,78,81,86,,18,,,,36,,45,7,54,,17,21,26,32,35,41',
'48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15',
'25,30,34,39,43,47,,,,58,82,87,90,93,96,99,102,106,72,74,78,81,86,82',
'87,90,93,96,99,102,106,72,74,78,81,86,,18,,,,36,,45,7,54,,17,21,26,32',
'35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3',
',,,,15,25,30,34,39,43,47,,,,58,82,87,90,93,96,99,102,106,72,74,82,87',
'90,93,96,99,102,106,72,74,82,87,90,93,96,99,102,18,,,,36,,45,7,54,,17',
'21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57',
'59,,,68,3,131,,,,15,25,30,34,39,43,47,,,,58,82,87,90,93,96,99,102,106',
'72,74,82,87,90,93,96,99,102,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32',
'35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3',
',,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,',
'45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37',
'40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,',
',,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66',
'1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47',
',,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41',
'48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15',
'25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54',
',17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49',
',57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,',
',,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13',
'19,23,28,,37,40,,49,,57,59,,,68,3,249,,,,15,25,30,34,39,43,47,,,,58',
',,,,,,,,,,,,,,,,,,,,,,,,,,,18,22,27,,36,,45,7,54,,17,21,26,32,35,41',
'48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15',
'25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54',
',17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49',
',57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,',
',,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13',
'19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,',
',,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53',
'56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34',
'39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26',
'32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68',
'3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36',
',45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37',
'40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,',
',,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66',
'1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47',
',,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41',
'48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,131,',
',,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45',
'7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40',
',49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,',
',,,,,,,,18,22,27,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66',
'1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,131,,,,15,25,30,34,39,43',
'47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35',
'41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,',
',,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45',
'7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40',
',49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,',
',,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4',
',,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58',
',,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51',
'53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30',
'34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21',
'26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59',
',,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18',
',,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23',
'28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,',
',,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,',
',64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39',
'43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32',
'35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3',
',,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,',
'45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37',
'40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,',
',,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66',
'1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47',
',,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41',
'48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15',
'25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54',
',17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49',
',57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,',
',,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13',
'19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,',
',,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53',
'56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34',
'39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26',
'32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68',
'3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36',
',45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37',
'40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,',
',,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66',
'1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47',
',,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41',
'48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15',
'25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54',
',17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49',
',57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,',
',,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13',
'19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,',
',,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53',
'56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34',
'39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26',
'32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68',
'3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36',
',45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37',
'40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,',
',,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66',
'1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47',
',,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41',
'48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15',
'25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54',
',17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49',
',57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,',
',,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13',
'19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,',
',,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53',
'56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34',
'39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26',
'32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68',
'3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36',
',45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37',
'40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,',
',,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66',
'1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47',
',,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41',
'48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15',
'25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54',
',17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49',
',57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,',
',,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13',
'19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34,39,43,47,,,,58,,,',
',,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53',
'56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,131,,,,15,25,30',
'34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21',
'26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59',
',,68,3,,199,,,15,25,30,34,39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53,56,,,64,66,1,4,,,13,19',
'23,28,,37,40,,49,,57,59,,,68,3,131,,,,15,25,30,34,39,43,47,,,,58,,,',
',,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26,32,35,41,48,51,53',
'56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68,3,,,,,15,25,30,34',
'39,43,47,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,,,,36,,45,7,54,,17,21,26',
'32,35,41,48,51,53,56,,,64,66,1,4,,,13,19,23,28,,37,40,,49,,57,59,,,68',
'3,,,,,15,25,30,34,39,43,47,75,,83,58,,,,17,21,26,32,35,41,48,51,53,56',
',,,,,,,84,,19,23,,,103,18,,,,36,,45,,54,3,,,,,82,87,90,93,96,99,102',
'106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85,88,91,94,97,100',
'104,219,,76,79,75,,83,,,242,,,145,,45,,54,,,,,,,,,,,,84,,,,,,103,,,',
',,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101',
'105,71,73,77,80,85,88,91,94,97,100,104,,,76,79,75,,83,,,280,17,21,26',
'32,35,41,48,51,53,56,,,144,,,,,,84,19,23,,,,103,,,,,,,,,3,,,,,,82,87',
'90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85',
'88,91,94,97,100,104,,,76,79,75,,83,,,277,,145,,45,,54,,,,,,,,,,,,,84',
',,,,,103,,,,,,,108,,,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89',
'92,95,98,101,105,71,73,77,80,85,88,91,94,97,100,104,,,76,79,75,,83,',
',,,,,,,,,,,,,,,,,,,,84,,,,,,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102',
'106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85,88,91,94,97,100',
'104,,,76,79,75,,83,,,,,,,,,,,,,,,,,,,,,,84,,,,,,103,,,,,,,,,,,,,,,82',
'87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80',
'85,88,91,94,97,100,104,,,76,79,75,,83,,,,,,,,,,,,,,,,,,,,,,84,,,,,,103',
',,,,,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101',
'105,71,73,77,80,85,88,91,94,97,100,104,,,76,79,75,,83,,,,,,,,,,,,,,',
',,,,,,,84,,,,,,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78',
'81,86,89,92,95,98,101,105,71,73,77,80,85,88,91,94,97,100,104,,,76,79',
'75,,83,,,,,,,,,,,,,,,,,,,,,,84,,,,,,103,,,,,,,,,,,,,,,82,87,90,93,96',
'99,102,106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85,88,91,94',
'97,100,104,,,76,79,75,,83,,,,,,,,,,,,,,,,,,,,,,84,,,,,,103,,,,,,,108',
',,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101,105',
'71,73,77,80,85,88,91,94,97,100,104,,,76,79,75,,83,,,,,,,,,,,,,,,,,,',
',,,84,,,,,,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86',
'89,92,95,98,101,105,71,73,77,80,85,88,91,94,97,100,104,,,76,79,75,,83',
',,,,,,,,,,,,,,,,,,,,,84,,,,,,103,,,,,,,108,,,,,,,,82,87,90,93,96,99',
'102,106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85,88,91,94,97',
'100,104,,,76,79,75,,83,,,,,,,,,,,,,,,,,,,,,,84,,,,,,103,,,,,,,,,,,,',
',,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101,105,71,73',
'77,80,85,88,91,94,97,100,104,219,,76,79,75,,83,,,,,,,,,,,,,,,,,,,,,',
'84,,,,,,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89',
'92,95,98,101,105,71,73,77,80,85,88,91,94,97,100,104,,,76,79,75,,83,',
',,,,,,,,,,,,,,,,,,,,84,,,,,,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102',
'106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85,88,91,94,97,100',
'104,,,76,79,75,,83,,,,,,,,,,,,,,,,,,,,,,84,,,,,,103,,,,,,,221,,,,,,',
',82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101,105,71,73',
'77,80,85,88,91,94,97,100,104,,,76,79,75,,83,,,,,,,,,,,,,,,,,,,,,,84',
',,,,,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92',
'95,98,101,105,71,73,77,80,85,88,91,94,97,100,104,,,76,79,75,,83,,,,',
',,,,,,,,,,,,,,,,,84,,,,,,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102,106',
'72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85,88,91,94,97,100,104',
',,76,79,75,,83,,,,,,,,,,,,,,,,,,,,,,84,,,,,,103,,,,,,,,,,,,,,,82,87',
'90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85',
'88,91,94,97,100,104,,,76,79,75,,83,,,,,,,,,,,,,,,,,,,,,,84,,,,,,103',
',,,,,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101',
'105,71,73,77,80,85,88,91,94,97,100,104,75,,83,,,,,,,,,,,,,,,,,,,,,,84',
',,,,,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92',
'95,98,101,105,71,73,77,80,85,88,91,94,97,100,104,75,,83,,,,,,,,,,,,',
',,,,,,,,,84,,,,,,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78',
'81,86,89,92,95,98,101,105,71,73,77,80,85,88,91,94,97,100,104,84,,,,',
',103,,,,,,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95',
'98,101,105,71,73,77,80,85,88,91,94,97,100,104,84,,,,265,,103,,,,,,,',
',,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101,105',
'71,73,77,80,85,88,91,94,97,100,104,84,,,,,,103,,,,,,,,,,,,,,,82,87,90',
'93,96,99,102,106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85,88',
'91,94,97,100,104,84,,,,,,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102,106',
'72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85,88,91,94,97,100,104',
'84,,,,,,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89',
'92,95,98,101,105,71,73,77,80,85,88,91,94,97,100,104,103,,,,,,,,,,,,',
',,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101,105,71,73',
'77,80,85,88,91,94,97,100,104,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102',
'106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85,88,91,94,97,100',
'104,103,,,,,,,,,,,,,,,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92',
'95,98,101,105,71,73,77,80,85,88,91,94,97,100,104,82,87,90,93,96,99,102',
'106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85,88,91,94,97,100',
'104,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101,105,71',
'73,77,80,85,88,91,94,97,100,104,82,87,90,93,96,99,102,106,72,74,78,81',
'86,89,92,95,98,101,105,71,73,77,80,85,88,91,94,97,100,104,82,87,90,93',
'96,99,102,106,72,74,78,81,86,89,92,95,98,101,105,71,73,77,80,85,88,91',
'94,97,100,104,82,87,90,93,96,99,102,106,72,74,78,81,86,89,92,95,98,101',
'105,71,73,77,80,85,88,91,94,97,100,104' ]
        racc_action_table = arr = Array.new(8334, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'148,198,148,113,113,113,113,113,113,113,113,113,113,221,114,138,138',
'138,129,129,221,138,113,113,148,190,190,190,190,190,148,187,187,187',
'187,187,113,6,67,67,6,59,157,198,198,148,148,148,148,148,148,148,148',
'148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148',
'148,148,148,148,148,143,159,148,148,157,212,146,158,113,203,113,93,113',
'148,93,93,93,93,93,93,93,93,93,93,238,31,93,93,93,93,239,118,93,93,93',
'93,61,93,93,210,93,223,93,93,226,207,93,93,28,223,18,141,93,93,93,93',
'93,93,93,141,224,258,93,118,181,181,136,136,224,258,143,159,223,197',
'143,159,146,158,196,203,146,158,141,203,141,195,226,226,226,219,93,224',
'258,173,93,31,93,268,93,31,268,268,268,268,268,268,268,268,268,268,229',
'5,268,268,268,268,134,134,268,268,268,268,213,268,268,200,268,63,268',
'268,4,5,268,268,150,150,224,224,268,268,268,268,268,268,268,107,107',
'154,268,126,126,152,229,229,229,178,178,123,123,142,229,121,121,139',
'213,213,213,200,200,200,278,278,213,84,5,200,268,184,184,271,268,5,268',
'265,268,5,265,265,265,265,265,265,265,265,265,265,130,125,265,265,265',
'265,124,117,265,265,265,265,279,265,265,,265,45,265,265,254,,265,265',
',45,,,265,265,265,265,265,265,265,,,,265,,,,130,130,130,,130,254,45',
',45,,,,254,,,254,194,194,194,194,194,194,194,,265,,,,265,,265,253,265',
',253,253,253,253,253,253,253,253,253,253,,,253,253,253,253,,,253,253',
'253,253,,253,253,,253,,253,253,,,253,253,,,,,253,253,253,253,253,253',
'253,,,,253,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176',
'176,176,176,176,176,176,,,,,,,253,,,,253,,253,251,253,,251,251,251,251',
'251,251,251,251,251,251,,,251,251,251,251,,,251,251,251,251,,251,251',
',251,,251,251,,,251,251,,,,,251,251,251,251,251,251,251,,,,251,189,189',
'189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189',
'189,189,,,251,,,,251,,,,251,,251,7,251,,7,7,7,7,7,7,7,7,7,7,,,7,7,7',
'7,,,7,7,7,7,,7,7,,7,,7,7,,,7,7,,,,,7,7,7,7,7,7,7,,,,7,174,174,174,174',
'174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174',
',,,,,,7,,,,7,,7,13,7,,13,13,13,13,13,13,13,13,13,13,,,13,13,13,13,,',
'13,13,13,13,,13,13,,13,,13,13,,,13,13,,,,,13,13,13,13,13,13,13,,,,13',
'163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163',
'163,163,163,163,,,,,,,13,,,,13,,13,15,13,,15,15,15,15,15,15,15,15,15',
'15,,,15,15,15,15,,,15,15,15,15,,15,15,,15,,15,15,,,15,15,,,,,15,15,15',
'15,15,15,15,,,,15,170,170,170,170,170,170,170,170,170,170,170,170,170',
'170,170,170,170,170,170,170,170,,,,,,,15,,,,15,,15,250,15,,250,250,250',
'250,250,250,250,250,250,250,,,250,250,250,250,,,250,250,250,250,,250',
'250,,250,,250,250,,,250,250,,,,,250,250,250,250,250,250,250,,,,250,167',
'167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167',
'167,167,167,,,,,,,250,,,,250,,250,25,250,,25,25,25,25,25,25,25,25,25',
'25,,,25,25,25,25,,,25,25,25,25,,25,25,,25,,25,25,,,25,25,,,,,25,25,25',
'25,25,25,25,,,,25,161,161,161,161,161,161,161,161,161,161,161,161,161',
'161,161,161,161,161,161,161,161,,,,,,,25,,,,25,,25,249,25,,249,249,249',
'249,249,249,249,249,249,249,,,249,249,249,249,,,249,249,249,249,,249',
'249,,249,,249,249,,,249,249,,,,,249,249,249,249,249,249,249,,,,249,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193',
'193,193,193,,,,,,,249,,,,249,,249,30,249,,30,30,30,30,30,30,30,30,30',
'30,,,30,30,30,30,,,30,30,30,30,,30,30,,30,,30,30,,,30,30,,,,,30,30,30',
'30,30,30,30,,,,30,180,180,180,180,180,180,180,180,180,180,180,180,180',
'177,177,177,177,177,177,177,177,177,177,177,177,177,,30,,,,30,,30,227',
'30,,227,227,227,227,227,227,227,227,227,227,,,227,227,227,227,,,227',
'227,227,227,,227,227,,227,,227,227,,,227,227,,,,,227,227,227,227,227',
'227,227,,,,227,186,186,186,186,186,186,186,186,186,186,186,186,186,183',
'183,183,183,183,183,183,183,183,183,183,183,183,,227,,,,227,,227,34',
'227,,34,34,34,34,34,34,34,34,34,34,,,34,34,34,34,,,34,34,34,34,,34,34',
',34,,34,34,,,34,34,,,,,34,34,34,34,34,34,34,,,,34,175,175,175,175,175',
'175,175,175,175,175,168,168,168,168,168,168,168,168,168,168,164,164',
'164,164,164,164,164,34,,,,34,,34,36,34,,36,36,36,36,36,36,36,36,36,36',
',,36,36,36,36,,,36,36,36,36,,36,36,,36,,36,36,,,36,36,36,,,,36,36,36',
'36,36,36,36,,,,36,171,171,171,171,171,171,171,171,171,171,162,162,162',
'162,162,162,162,,,,,,,,,,,36,,,,36,,36,37,36,,37,37,37,37,37,37,37,37',
'37,37,,,37,37,37,37,,,37,37,37,37,,37,37,,37,,37,37,,,37,37,,,,,37,37',
'37,37,37,37,37,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,37,,37,39,37,',
'39,39,39,39,39,39,39,39,39,39,,,39,39,39,39,,,39,39,39,39,,39,39,,39',
',39,39,,,39,39,,,,,39,39,39,39,39,39,39,,,,39,,,,,,,,,,,,,,,,,,,,,,',
',,,,,39,,,,39,,39,40,39,,40,40,40,40,40,40,40,40,40,40,,,40,40,40,40',
',,40,40,40,40,,40,40,,40,,40,40,,,40,40,,,,,40,40,40,40,40,40,40,,,',
'40,,,,,,,,,,,,,,,,,,,,,,,,,,,,40,,,,40,,40,43,40,,43,43,43,43,43,43',
'43,43,43,43,,,43,43,43,43,,,43,43,43,43,,43,43,,43,,43,43,,,43,43,,',
',,43,43,43,43,43,43,43,,,,43,,,,,,,,,,,,,,,,,,,,,,,,,,,,43,,,,43,,43',
'225,43,,225,225,225,225,225,225,225,225,225,225,,,225,225,225,225,,',
'225,225,225,225,,225,225,,225,,225,225,,,225,225,,,,,225,225,225,225',
'225,225,225,,,,225,,,,,,,,,,,,,,,,,,,,,,,,,,,,225,,,,225,,225,216,225',
',216,216,216,216,216,216,216,216,216,216,,,216,216,216,216,,,216,216',
'216,216,,216,216,,216,,216,216,,,216,216,216,,,,216,216,216,216,216',
'216,216,,,,216,,,,,,,,,,,,,,,,,,,,,,,,,,,,216,216,216,,216,,216,49,216',
',49,49,49,49,49,49,49,49,49,49,,,49,49,49,49,,,49,49,49,49,,49,49,,49',
',49,49,,,49,49,,,,,49,49,49,49,49,49,49,,,,49,,,,,,,,,,,,,,,,,,,,,,',
',,,,,49,,,,49,,49,54,49,,54,54,54,54,54,54,54,54,54,54,,,54,54,54,54',
',,54,54,54,54,,54,54,,54,,54,54,,,54,54,,,,,54,54,54,54,54,54,54,,,',
'54,,,,,,,,,,,,,,,,,,,,,,,,,,,,54,,,,54,,54,57,54,,57,57,57,57,57,57',
'57,57,57,57,,,57,57,57,57,,,57,57,57,57,,57,57,,57,,57,57,,,57,57,,',
',,57,57,57,57,57,57,57,,,,57,,,,,,,,,,,,,,,,,,,,,,,,,,,,57,,,,57,,57',
'58,57,,58,58,58,58,58,58,58,58,58,58,,,58,58,58,58,,,58,58,58,58,,58',
'58,,58,,58,58,,,58,58,,,,,58,58,58,58,58,58,58,,,,58,,,,,,,,,,,,,,,',
',,,,,,,,,,,,58,,,,58,,58,214,58,,214,214,214,214,214,214,214,214,214',
'214,,,214,214,214,214,,,214,214,214,214,,214,214,,214,,214,214,,,214',
'214,,,,,214,214,214,214,214,214,214,,,,214,,,,,,,,,,,,,,,,,,,,,,,,,',
',,214,,,,214,,214,211,214,,211,211,211,211,211,211,211,211,211,211,',
',211,211,211,211,,,211,211,211,211,,211,211,,211,,211,211,,,211,211',
',,,,211,211,211,211,211,211,211,,,,211,,,,,,,,,,,,,,,,,,,,,,,,,,,,211',
',,,211,,211,160,211,,160,160,160,160,160,160,160,160,160,160,,,160,160',
'160,160,,,160,160,160,160,,160,160,,160,,160,160,,,160,160,,,,,160,160',
'160,160,160,160,160,,,,160,,,,,,,,,,,,,,,,,,,,,,,,,,,,160,,,,160,,160',
'151,160,,151,151,151,151,151,151,151,151,151,151,,,151,151,151,151,',
',151,151,151,151,,151,151,,151,,151,151,,,151,151,151,,,,151,151,151',
'151,151,151,151,,,,151,,,,,,,,,,,,,,,,,,,,,,,,,,,,151,,,,151,,151,0',
'151,,0,0,0,0,0,0,0,0,0,0,,,0,0,0,0,,,0,0,0,0,,0,0,,0,,0,0,,,0,0,,,,',
'0,0,0,0,0,0,0,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,,0,,0,145,0,,145',
'145,145,145,145,145,145,145,145,145,,,145,145,145,145,,,145,145,145',
'145,,145,145,,145,,145,145,,,145,145,145,,,,145,145,145,145,145,145',
'145,,,,145,,,,,,,,,,,,,,,,,,,,,,,,,,,,145,,,,145,,145,71,145,,71,71',
'71,71,71,71,71,71,71,71,,,71,71,71,71,,,71,71,71,71,,71,71,,71,,71,71',
',,71,71,,,,,71,71,71,71,71,71,71,,,,71,,,,,,,,,,,,,,,,,,,,,,,,,,,,71',
',,,71,,71,72,71,,72,72,72,72,72,72,72,72,72,72,,,72,72,72,72,,,72,72',
'72,72,,72,72,,72,,72,72,,,72,72,,,,,72,72,72,72,72,72,72,,,,72,,,,,',
',,,,,,,,,,,,,,,,,,,,,,72,,,,72,,72,73,72,,73,73,73,73,73,73,73,73,73',
'73,,,73,73,73,73,,,73,73,73,73,,73,73,,73,,73,73,,,73,73,,,,,73,73,73',
'73,73,73,73,,,,73,,,,,,,,,,,,,,,,,,,,,,,,,,,,73,,,,73,,73,74,73,,74',
'74,74,74,74,74,74,74,74,74,,,74,74,74,74,,,74,74,74,74,,74,74,,74,,74',
'74,,,74,74,,,,,74,74,74,74,74,74,74,,,,74,,,,,,,,,,,,,,,,,,,,,,,,,,',
',74,,,,74,,74,75,74,,75,75,75,75,75,75,75,75,75,75,,,75,75,75,75,,,75',
'75,75,75,,75,75,,75,,75,75,,,75,75,,,,,75,75,75,75,75,75,75,,,,75,,',
',,,,,,,,,,,,,,,,,,,,,,,,,75,,,,75,,75,76,75,,76,76,76,76,76,76,76,76',
'76,76,,,76,76,76,76,,,76,76,76,76,,76,76,,76,,76,76,,,76,76,,,,,76,76',
'76,76,76,76,76,,,,76,,,,,,,,,,,,,,,,,,,,,,,,,,,,76,,,,76,,76,77,76,',
'77,77,77,77,77,77,77,77,77,77,,,77,77,77,77,,,77,77,77,77,,77,77,,77',
',77,77,,,77,77,,,,,77,77,77,77,77,77,77,,,,77,,,,,,,,,,,,,,,,,,,,,,',
',,,,,77,,,,77,,77,78,77,,78,78,78,78,78,78,78,78,78,78,,,78,78,78,78',
',,78,78,78,78,,78,78,,78,,78,78,,,78,78,,,,,78,78,78,78,78,78,78,,,',
'78,,,,,,,,,,,,,,,,,,,,,,,,,,,,78,,,,78,,78,79,78,,79,79,79,79,79,79',
'79,79,79,79,,,79,79,79,79,,,79,79,79,79,,79,79,,79,,79,79,,,79,79,,',
',,79,79,79,79,79,79,79,,,,79,,,,,,,,,,,,,,,,,,,,,,,,,,,,79,,,,79,,79',
'80,79,,80,80,80,80,80,80,80,80,80,80,,,80,80,80,80,,,80,80,80,80,,80',
'80,,80,,80,80,,,80,80,,,,,80,80,80,80,80,80,80,,,,80,,,,,,,,,,,,,,,',
',,,,,,,,,,,,80,,,,80,,80,81,80,,81,81,81,81,81,81,81,81,81,81,,,81,81',
'81,81,,,81,81,81,81,,81,81,,81,,81,81,,,81,81,,,,,81,81,81,81,81,81',
'81,,,,81,,,,,,,,,,,,,,,,,,,,,,,,,,,,81,,,,81,,81,83,81,,83,83,83,83',
'83,83,83,83,83,83,,,83,83,83,83,,,83,83,83,83,,83,83,,83,,83,83,,,83',
'83,,,,,83,83,83,83,83,83,83,,,,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,83,,,,83',
',83,131,83,,131,131,131,131,131,131,131,131,131,131,,,131,131,131,131',
',,131,131,131,131,,131,131,,131,,131,131,,,131,131,,,,,131,131,131,131',
'131,131,131,,,,131,,,,,,,,,,,,,,,,,,,,,,,,,,,,131,,,,131,,131,85,131',
',85,85,85,85,85,85,85,85,85,85,,,85,85,85,85,,,85,85,85,85,,85,85,,85',
',85,85,,,85,85,,,,,85,85,85,85,85,85,85,,,,85,,,,,,,,,,,,,,,,,,,,,,',
',,,,,85,,,,85,,85,86,85,,86,86,86,86,86,86,86,86,86,86,,,86,86,86,86',
',,86,86,86,86,,86,86,,86,,86,86,,,86,86,,,,,86,86,86,86,86,86,86,,,',
'86,,,,,,,,,,,,,,,,,,,,,,,,,,,,86,,,,86,,86,88,86,,88,88,88,88,88,88',
'88,88,88,88,,,88,88,88,88,,,88,88,88,88,,88,88,,88,,88,88,,,88,88,,',
',,88,88,88,88,88,88,88,,,,88,,,,,,,,,,,,,,,,,,,,,,,,,,,,88,,,,88,,88',
'115,88,,115,115,115,115,115,115,115,115,115,115,,,115,115,115,115,,',
'115,115,115,115,,115,115,,115,,115,115,,,115,115,,,,,115,115,115,115',
'115,115,115,,,,115,,,,,,,,,,,,,,,,,,,,,,,,,,,,115,,,,115,,115,90,115',
',90,90,90,90,90,90,90,90,90,90,,,90,90,90,90,,,90,90,90,90,,90,90,,90',
',90,90,,,90,90,,,,,90,90,90,90,90,90,90,,,,90,,,,,,,,,,,,,,,,,,,,,,',
',,,,,90,,,,90,,90,91,90,,91,91,91,91,91,91,91,91,91,91,,,91,91,91,91',
',,91,91,91,91,,91,91,,91,,91,91,,,91,91,,,,,91,91,91,91,91,91,91,,,',
'91,,,,,,,,,,,,,,,,,,,,,,,,,,,,91,,,,91,,91,92,91,,92,92,92,92,92,92',
'92,92,92,92,,,92,92,92,92,,,92,92,92,92,,92,92,,92,,92,92,,,92,92,,',
',,92,92,92,92,92,92,92,,,,92,,,,,,,,,,,,,,,,,,,,,,,,,,,,92,,,,92,,92',
'1,92,,1,1,1,1,1,1,1,1,1,1,,,1,1,1,1,,,1,1,1,1,,1,1,,1,,1,1,,,1,1,,,',
',1,1,1,1,1,1,1,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,1,,1,94,1,,94,94',
'94,94,94,94,94,94,94,94,,,94,94,94,94,,,94,94,94,94,,94,94,,94,,94,94',
',,94,94,,,,,94,94,94,94,94,94,94,,,,94,,,,,,,,,,,,,,,,,,,,,,,,,,,,94',
',,,94,,94,95,94,,95,95,95,95,95,95,95,95,95,95,,,95,95,95,95,,,95,95',
'95,95,,95,95,,95,,95,95,,,95,95,,,,,95,95,95,95,95,95,95,,,,95,,,,,',
',,,,,,,,,,,,,,,,,,,,,,95,,,,95,,95,96,95,,96,96,96,96,96,96,96,96,96',
'96,,,96,96,96,96,,,96,96,96,96,,96,96,,96,,96,96,,,96,96,,,,,96,96,96',
'96,96,96,96,,,,96,,,,,,,,,,,,,,,,,,,,,,,,,,,,96,,,,96,,96,97,96,,97',
'97,97,97,97,97,97,97,97,97,,,97,97,97,97,,,97,97,97,97,,97,97,,97,,97',
'97,,,97,97,,,,,97,97,97,97,97,97,97,,,,97,,,,,,,,,,,,,,,,,,,,,,,,,,',
',97,,,,97,,97,98,97,,98,98,98,98,98,98,98,98,98,98,,,98,98,98,98,,,98',
'98,98,98,,98,98,,98,,98,98,,,98,98,,,,,98,98,98,98,98,98,98,,,,98,,',
',,,,,,,,,,,,,,,,,,,,,,,,,98,,,,98,,98,99,98,,99,99,99,99,99,99,99,99',
'99,99,,,99,99,99,99,,,99,99,99,99,,99,99,,99,,99,99,,,99,99,,,,,99,99',
'99,99,99,99,99,,,,99,,,,,,,,,,,,,,,,,,,,,,,,,,,,99,,,,99,,99,100,99',
',100,100,100,100,100,100,100,100,100,100,,,100,100,100,100,,,100,100',
'100,100,,100,100,,100,,100,100,,,100,100,,,,,100,100,100,100,100,100',
'100,,,,100,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,100,,100,101,100,,101,101',
'101,101,101,101,101,101,101,101,,,101,101,101,101,,,101,101,101,101',
',101,101,,101,,101,101,,,101,101,,,,,101,101,101,101,101,101,101,,,',
'101,,,,,,,,,,,,,,,,,,,,,,,,,,,,101,,,,101,,101,102,101,,102,102,102',
'102,102,102,102,102,102,102,,,102,102,102,102,,,102,102,102,102,,102',
'102,,102,,102,102,,,102,102,,,,,102,102,102,102,102,102,102,,,,102,',
',,,,,,,,,,,,,,,,,,,,,,,,,,102,,,,102,,102,103,102,,103,103,103,103,103',
'103,103,103,103,103,,,103,103,103,103,,,103,103,103,103,,103,103,,103',
',103,103,,,103,103,,,,,103,103,103,103,103,103,103,,,,103,,,,,,,,,,',
',,,,,,,,,,,,,,,,,103,,,,103,,103,104,103,,104,104,104,104,104,104,104',
'104,104,104,,,104,104,104,104,,,104,104,104,104,,104,104,,104,,104,104',
',,104,104,,,,,104,104,104,104,104,104,104,,,,104,,,,,,,,,,,,,,,,,,,',
',,,,,,,,104,,,,104,,104,105,104,,105,105,105,105,105,105,105,105,105',
'105,,,105,105,105,105,,,105,105,105,105,,105,105,,105,,105,105,,,105',
'105,,,,,105,105,105,105,105,105,105,,,,105,,,,,,,,,,,,,,,,,,,,,,,,,',
',,105,,,,105,,105,106,105,,106,106,106,106,106,106,106,106,106,106,',
',106,106,106,106,,,106,106,106,106,,106,106,,106,,106,106,,,106,106',
',,,,106,106,106,106,106,106,106,,,,106,,,,,,,,,,,,,,,,,,,,,,,,,,,,106',
',,,106,,106,127,106,,127,127,127,127,127,127,127,127,127,127,,,127,127',
'127,127,,,127,127,127,127,,127,127,,127,,127,127,,,127,127,127,,,,127',
'127,127,127,127,127,127,,,,127,,,,,,,,,,,,,,,,,,,,,,,,,,,,127,,,,127',
',127,108,127,,108,108,108,108,108,108,108,108,108,108,,,108,108,108',
'108,,,108,108,108,108,,108,108,,108,,108,108,,,108,108,,108,,,108,108',
'108,108,108,108,108,,,,108,,,,,,,,,,,,,,,,,,,,,,,,,,,,108,,,,108,,108',
'109,108,,109,109,109,109,109,109,109,109,109,109,,,109,109,109,109,',
',109,109,109,109,,109,109,,109,,109,109,,,109,109,109,,,,109,109,109',
'109,109,109,109,,,,109,,,,,,,,,,,,,,,,,,,,,,,,,,,,109,,,,109,,109,112',
'109,,112,112,112,112,112,112,112,112,112,112,,,112,112,112,112,,,112',
'112,112,112,,112,112,,112,,112,112,,,112,112,,,,,112,112,112,112,112',
'112,112,,,,112,,,,,,,,,,,,,,,,,,,,,,,,,,,,112,,,,112,,112,89,112,,89',
'89,89,89,89,89,89,89,89,89,,,89,89,89,89,,,89,89,89,89,,89,89,,89,,89',
'89,,,89,89,,,,,89,89,89,89,89,89,89,205,,205,89,,,,66,66,66,66,66,66',
'66,66,66,66,,,,,,,,205,,66,66,,,205,89,,,,89,,89,,89,66,,,,,205,205',
'205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205',
'205,205,205,205,205,205,205,205,205,205,205,205,,205,205,276,,276,,',
'205,,,66,,66,,66,,,,,,,,,,,,276,,,,,,276,,,,,,,,,,,,,,,276,276,276,276',
'276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276',
'276,276,276,276,276,276,276,276,276,,,276,276,269,,269,,,276,47,47,47',
'47,47,47,47,47,47,47,,,47,,,,,,269,47,47,,,,269,,,,,,,,,47,,,,,,269',
'269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269',
'269,269,269,269,269,269,269,269,269,269,269,269,,,269,269,133,,133,',
',269,,47,,47,,47,,,,,,,,,,,,,133,,,,,,133,,,,,,,133,,,,,,,,133,133,133',
'133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133',
'133,133,133,133,133,133,133,133,133,133,,,133,133,201,,201,,,,,,,,,',
',,,,,,,,,,,,201,,,,,,201,,,,,,,,,,,,,,,201,201,201,201,201,201,201,201',
'201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201',
'201,201,201,201,201,,,201,201,248,,248,,,,,,,,,,,,,,,,,,,,,,248,,,,',
',248,,,,,,,,,,,,,,,248,248,248,248,248,248,248,248,248,248,248,248,248',
'248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248',
',,248,248,261,,261,,,,,,,,,,,,,,,,,,,,,,261,,,,,,261,,,,,,,,,,,,,,,261',
'261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261',
'261,261,261,261,261,261,261,261,261,261,261,261,,,261,261,266,,266,',
',,,,,,,,,,,,,,,,,,,,266,,,,,,266,,,,,,,,,,,,,,,266,266,266,266,266,266',
'266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266',
'266,266,266,266,266,266,266,,,266,266,218,,218,,,,,,,,,,,,,,,,,,,,,',
'218,,,,,,218,,,,,,,,,,,,,,,218,218,218,218,218,218,218,218,218,218,218',
'218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218',
'218,218,,,218,218,119,,119,,,,,,,,,,,,,,,,,,,,,,119,,,,,,119,,,,,,,119',
',,,,,,,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119',
'119,119,119,119,119,119,119,119,119,119,119,119,119,119,,,119,119,267',
',267,,,,,,,,,,,,,,,,,,,,,,267,,,,,,267,,,,,,,,,,,,,,,267,267,267,267',
'267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267',
'267,267,267,267,267,267,267,267,267,,,267,267,270,,270,,,,,,,,,,,,,',
',,,,,,,,270,,,,,,270,,,,,,,270,,,,,,,,270,270,270,270,270,270,270,270',
'270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270',
'270,270,270,270,270,,,270,270,132,,132,,,,,,,,,,,,,,,,,,,,,,132,,,,',
',132,,,,,,,,,,,,,,,132,132,132,132,132,132,132,132,132,132,132,132,132',
'132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132',
'132,,132,132,259,,259,,,,,,,,,,,,,,,,,,,,,,259,,,,,,259,,,,,,,,,,,,',
',,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259',
'259,259,259,259,259,259,259,259,259,259,259,259,259,,,259,259,247,,247',
',,,,,,,,,,,,,,,,,,,,,247,,,,,,247,,,,,,,,,,,,,,,247,247,247,247,247',
'247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247',
'247,247,247,247,247,247,247,247,,,247,247,135,,135,,,,,,,,,,,,,,,,,',
',,,,135,,,,,,135,,,,,,,135,,,,,,,,135,135,135,135,135,135,135,135,135',
'135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135',
'135,135,135,135,,,135,135,70,,70,,,,,,,,,,,,,,,,,,,,,,70,,,,,,70,,,',
',,,,,,,,,,,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70',
'70,70,70,70,70,70,70,70,70,70,70,,,70,70,235,,235,,,,,,,,,,,,,,,,,,',
',,,235,,,,,,235,,,,,,,,,,,,,,,235,235,235,235,235,235,235,235,235,235',
'235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235',
'235,235,235,,,235,235,2,,2,,,,,,,,,,,,,,,,,,,,,,2,,,,,,2,,,,,,,,,,,',
',,,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,,,2,2',
'166,,166,,,,,,,,,,,,,,,,,,,,,,166,,,,,,166,,,,,,,,,,,,,,,166,166,166',
'166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166',
'166,166,166,166,166,166,166,166,166,166,202,,202,,,,,,,,,,,,,,,,,,,',
',,202,,,,,,202,,,,,,,,,,,,,,,202,202,202,202,202,202,202,202,202,202',
'202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202',
'202,202,202,169,,169,,,,,,,,,,,,,,,,,,,,,,169,,,,,,169,,,,,,,,,,,,,',
',169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169',
'169,169,169,169,169,169,169,169,169,169,169,169,169,165,,,,,,165,,,',
',,,,,,,,,,,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165',
'165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,244,,,,244',
',244,,,,,,,,,,,,,,,244,244,244,244,244,244,244,244,244,244,244,244,244',
'244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244',
'275,,,,,,275,,,,,,,,,,,,,,,275,275,275,275,275,275,275,275,275,275,275',
'275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275',
'275,275,120,,,,,,120,,,,,,,,,,,,,,,120,120,120,120,120,120,120,120,120',
'120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120',
'120,120,120,120,172,,,,,,172,,,,,,,,,,,,,,,172,172,172,172,172,172,172',
'172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172',
'172,172,172,172,172,172,147,,,,,,,,,,,,,,,147,147,147,147,147,147,147',
'147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147',
'147,147,147,147,147,147,191,,,,,,,,,,,,,,,191,191,191,191,191,191,191',
'191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191',
'191,191,191,191,191,191,149,,,,,,,,,,,,,,,149,149,149,149,149,149,149',
'149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149',
'149,149,149,149,149,149,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182',
'182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,179,179',
'179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179',
'179,179,179,179,179,179,179,179,179,179,179,185,185,185,185,185,185',
'185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185',
'185,185,185,185,185,185,185,188,188,188,188,188,188,188,188,188,188',
'188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188',
'188,188,188' ]
        racc_action_check = arr = Array.new(8334, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  2578,  4470,  7488,   nil,   166,   171,   -44,   514,   nil,   nil,
   nil,   nil,   nil,   600,   nil,   686,   nil,   nil,    86,   nil,
   nil,   nil,   nil,   nil,   nil,   858,   nil,   nil,   109,   nil,
  1030,    85,   nil,   nil,  1202,   nil,  1288,  1374,   nil,  1460,
  1546,   nil,   nil,  1632,   nil,   282,   nil,  6227,   nil,  1890,
   nil,   nil,   nil,   nil,  1976,   nil,   nil,  2062,  2148,   -48,
   nil,   111,   nil,   199,   nil,   nil,  6070,   -44,   nil,   nil,
  7330,  2750,  2836,  2922,  3008,  3094,  3180,  3266,  3352,  3438,
  3524,  3610,   nil,  3696,   234,  3868,  3954,   nil,  4040,  6018,
  4212,  4298,  4384,    84,  4556,  4642,  4728,  4814,  4900,  4986,
  5072,  5158,  5244,  5330,  5416,  5502,  5588,   199,  5760,  5846,
   nil,   nil,  5932,    -2,     0,  4126,   nil,   239,    89,  6777,
  7921,   189,   nil,   185,   193,   245,   177,  5674,   nil,   -29,
   231,  3782,  7014,  6303,   144,  7251,    94,   nil,   -67,   160,
   nil,   120,   156,    60,   nil,  2664,    66,  8017,    -2,  8107,
   162,  2492,   226,   nil,   219,   nil,   nil,    40,    67,    61,
  2406,   865,  1305,   607,  1229,  7768,  7567,   779,  1219,  7717,
   693,  1295,  7972,   141,   521,  1209,   349,  1050,   183,  8197,
  1037,    92,  8167,  1136,   205,  8227,  1123,   -16,  8257,   435,
   -22,  8062,  8137,   951,   282,   121,   131,   134,   -39,   nil,
   160,  6382,  7642,    69,   nil,  6066,   nil,   103,   nil,   nil,
   100,  2320,    41,   157,  2234,   nil,  1804,   nil,  6698,    87,
   nil,   -17,   nil,   110,   129,  1718,    79,  1116,   nil,   145,
   nil,   nil,   nil,   nil,   nil,  7409,   nil,   nil,    60,    66,
   nil,   nil,   nil,   nil,  7819,   nil,   nil,  7172,  6461,   944,
   772,   428,   nil,   342,   288,   nil,   nil,   nil,   130,  7093,
   nil,  6540,   nil,   nil,   nil,   256,  6619,  6856,   170,  6224,
  6935,   215,   nil,   nil,   nil,  7870,  6145,   nil,   163,   243,
   nil,   nil,   nil ]

racc_action_default = [
    -1,  -161,    -4,   -29,  -161,    -7,  -161,  -161,    -8,   -89,
    -9,   -96,   -97,  -161,   -10,  -161,   -98,   -27,  -161,   -31,
   -11,   -28,   -25,   -32,   -12,  -161,   -30,   -26,  -161,   -13,
  -161,  -112,   -33,   -14,  -161,   -34,  -122,  -161,   -15,  -161,
  -161,   -35,   -16,  -161,  -114,  -106,   -17,  -161,   -36,  -161,
   -18,   -37,   -19,   -38,  -161,   -20,   -94,  -161,  -161,  -161,
   -21,  -161,   -22,  -154,   -91,    -2,  -161,    -3,   -44,   -95,
   -43,  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,
  -161,  -161,   -55,  -161,  -161,  -161,  -161,   -54,  -161,  -161,
  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,
  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -122,
  -103,  -102,  -161,  -161,  -161,  -161,   -99,  -161,  -161,  -161,
  -134,   -48,   -88,   -45,  -139,  -161,   -46,  -122,  -100,   -49,
  -161,  -161,  -123,  -161,   -51,  -161,   -50,   -42,  -161,  -161,
  -107,  -106,  -161,  -161,   -92,  -122,   -93,   -52,  -161,   -53,
   -47,  -122,  -161,  -152,  -154,  -156,  -158,  -161,  -113,  -161,
    -6,   -73,   -62,   -74,   -63,  -159,   -84,   -75,   -64,   -85,
   -76,   -65,  -160,  -161,   -77,   -66,   -78,   -67,   -56,   -79,
   -68,   -57,   -80,   -69,   -58,   -81,   -70,   -59,   -82,   -71,
   -60,   -86,   -83,   -72,   -61,  -161,  -130,  -161,  -161,   -24,
  -161,  -123,   -39,  -115,  -101,  -161,   -87,  -161,   -90,  -150,
  -161,  -161,  -161,  -161,  -161,  -129,  -161,  -121,  -124,  -161,
  -136,  -161,  -105,  -161,  -161,  -161,  -161,  -161,  -135,  -161,
   283,  -153,  -157,  -155,  -151,    -5,  -137,  -131,  -161,  -161,
   -23,  -116,  -104,  -140,  -141,  -138,  -117,  -126,  -125,  -161,
  -161,  -161,  -149,  -161,  -161,  -145,  -109,  -108,  -161,   -40,
  -111,   -41,  -118,  -132,  -133,  -161,  -128,  -127,  -161,  -161,
  -161,  -161,  -143,  -146,  -110,  -142,  -161,  -119,  -147,  -161,
  -120,  -148,  -144 ]

racc_goto_table = [
    65,   212,   128,     2,    70,   110,   143,   125,    67,    61,
   119,   200,   255,   107,   137,   196,   120,   138,   121,   146,
   234,   153,   254,   256,   257,   158,   155,   122,   123,   213,
   154,   110,   208,   126,   156,   nil,   nil,   129,   159,   132,
   133,   nil,   134,   135,   nil,   273,   136,   nil,   nil,   236,
   nil,   nil,   147,   229,   nil,   nil,   nil,   148,   274,   nil,
   149,   150,   nil,   173,   nil,   nil,   nil,   160,   nil,   nil,
   nil,   nil,   143,   nil,   161,   162,   163,   164,   165,   166,
   167,   168,   169,   170,   171,   203,   172,   nil,   174,   175,
   nil,   176,   177,   178,   179,   180,   181,   182,   183,   184,
   185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
   137,     2,   231,   226,   128,   202,   198,   232,   205,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   206,   nil,   209,   128,
   nil,   nil,   nil,   nil,   218,   nil,   nil,   nil,   223,   nil,
   nil,   nil,   220,   110,   nil,   nil,   110,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   110,   110,
   nil,   nil,   nil,   235,   nil,   nil,   233,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   252,   nil,   137,   137,   nil,   nil,   nil,   nil,   160,   nil,
   nil,   nil,   nil,   110,   237,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   244,   nil,   250,   247,   nil,   248,
   nil,   245,   nil,   252,   258,   nil,   223,   137,   259,   nil,
   261,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   263,   264,   nil,
   nil,   nil,   266,   267,   269,   nil,   270,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   275,   nil,
   nil,   276,   nil,   nil,   nil,   nil,   nil,   nil,   281,   278,
   279 ]

racc_goto_check = [
     2,    37,    29,     4,     4,     9,    30,    36,     3,     1,
     4,    34,    39,    21,    20,    35,     4,    32,     4,     5,
    40,    41,    38,    23,    23,    30,    43,    21,     4,    34,
    42,     9,    25,     4,    44,   nil,   nil,     4,     5,     4,
     4,   nil,     4,     4,   nil,    39,     4,   nil,   nil,    37,
   nil,   nil,     4,    34,   nil,   nil,   nil,     4,    23,   nil,
     4,     4,   nil,    36,   nil,   nil,   nil,     2,   nil,   nil,
   nil,   nil,    30,   nil,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     5,     4,   nil,     4,     4,
   nil,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
    20,     4,    41,    32,    29,     4,     3,    43,     4,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,    21,    29,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,     2,   nil,
   nil,   nil,    21,     9,   nil,   nil,     9,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     9,     9,
   nil,   nil,   nil,     4,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    20,   nil,    20,    20,   nil,   nil,   nil,   nil,     2,   nil,
   nil,   nil,   nil,     9,    21,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,     2,     4,   nil,     4,
   nil,    21,   nil,    20,     2,   nil,     2,    20,     4,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,    21,   nil,
   nil,   nil,     4,     4,     4,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,     2,    21,
    21 ]

racc_goto_pointer = [
   nil,     9,     0,     8,     3,   -28,   nil,   nil,   nil,     0,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -31,     9,   nil,  -200,   nil,   -86,   nil,   nil,   nil,   -29,
   -41,   nil,   -28,   nil,   -98,   -92,   -21,  -124,  -199,  -209,
  -137,   -42,   -33,   -37,   -29 ]

racc_goto_default = [
   nil,   nil,   214,   nil,   201,     5,     8,    10,    14,    20,
    24,    29,    33,    38,    42,    46,    50,    52,    55,    60,
    62,   nil,    69,   140,     6,     9,    11,    12,    16,   116,
    31,   111,   nil,    44,   130,   nil,   nil,   nil,   nil,   nil,
    63,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 92, :_reduce_1,
  1, 92, :_reduce_2,
  1, 92, :_reduce_3,
  1, 94, :_reduce_4,
  3, 94, :_reduce_5,
  2, 94, :_reduce_6,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  3, 112, :_reduce_23,
  2, 112, :_reduce_24,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 113, :_reduce_27,
  1, 113, :_reduce_28,
  1, 113, :_reduce_29,
  1, 113, :_reduce_30,
  1, 113, :_reduce_31,
  1, 113, :_reduce_32,
  1, 113, :_reduce_33,
  1, 113, :_reduce_34,
  1, 113, :_reduce_35,
  1, 113, :_reduce_36,
  1, 113, :_reduce_37,
  1, 113, :_reduce_38,
  3, 101, :_reduce_39,
  3, 114, :_reduce_40,
  3, 114, :_reduce_41,
  1, 114, :_reduce_42,
  2, 105, :_reduce_43,
  1, 111, :_reduce_44,
  2, 99, :_reduce_45,
  2, 99, :_reduce_46,
  2, 99, :_reduce_47,
  2, 99, :_reduce_48,
  2, 99, :_reduce_49,
  2, 99, :_reduce_50,
  2, 99, :_reduce_51,
  2, 99, :_reduce_52,
  2, 99, :_reduce_53,
  2, 99, :_reduce_54,
  2, 99, :_reduce_55,
  3, 99, :_reduce_56,
  3, 99, :_reduce_57,
  3, 99, :_reduce_58,
  3, 99, :_reduce_59,
  3, 99, :_reduce_60,
  3, 99, :_reduce_61,
  3, 99, :_reduce_62,
  3, 99, :_reduce_63,
  3, 99, :_reduce_64,
  3, 99, :_reduce_65,
  3, 99, :_reduce_66,
  3, 99, :_reduce_67,
  3, 99, :_reduce_68,
  3, 99, :_reduce_69,
  3, 99, :_reduce_70,
  3, 99, :_reduce_71,
  3, 99, :_reduce_72,
  3, 99, :_reduce_73,
  3, 99, :_reduce_74,
  3, 99, :_reduce_75,
  3, 99, :_reduce_76,
  3, 99, :_reduce_77,
  3, 99, :_reduce_78,
  3, 99, :_reduce_79,
  3, 99, :_reduce_80,
  3, 99, :_reduce_81,
  3, 99, :_reduce_82,
  3, 99, :_reduce_83,
  3, 99, :_reduce_84,
  3, 99, :_reduce_85,
  3, 99, :_reduce_86,
  3, 98, :_reduce_87,
  2, 98, :_reduce_88,
  1, 115, :_reduce_89,
  3, 115, :_reduce_90,
  1, 116, :_reduce_none,
  2, 116, :_reduce_92,
  2, 110, :_reduce_93,
  1, 96, :_reduce_94,
  1, 96, :_reduce_95,
  1, 96, :_reduce_96,
  1, 96, :_reduce_97,
  1, 96, :_reduce_98,
  2, 96, :_reduce_99,
  2, 96, :_reduce_100,
  2, 120, :_reduce_101,
  1, 120, :_reduce_102,
  1, 120, :_reduce_103,
  3, 122, :_reduce_104,
  3, 118, :_reduce_105,
  0, 123, :_reduce_106,
  1, 123, :_reduce_107,
  3, 123, :_reduce_108,
  3, 123, :_reduce_109,
  4, 123, :_reduce_110,
  3, 123, :_reduce_111,
  1, 97, :_reduce_112,
  2, 97, :_reduce_113,
  1, 97, :_reduce_114,
  3, 109, :_reduce_115,
  4, 121, :_reduce_116,
  4, 121, :_reduce_117,
  4, 124, :_reduce_118,
  6, 100, :_reduce_119,
  7, 100, :_reduce_120,
  3, 117, :_reduce_121,
  0, 125, :_reduce_122,
  1, 125, :_reduce_123,
  2, 125, :_reduce_124,
  3, 125, :_reduce_125,
  3, 125, :_reduce_126,
  4, 125, :_reduce_127,
  4, 125, :_reduce_128,
  2, 125, :_reduce_129,
  3, 103, :_reduce_130,
  4, 103, :_reduce_131,
  5, 103, :_reduce_132,
  3, 126, :_reduce_133,
  2, 104, :_reduce_134,
  3, 119, :_reduce_135,
  3, 106, :_reduce_136,
  4, 107, :_reduce_137,
  4, 107, :_reduce_138,
  1, 127, :_reduce_139,
  3, 127, :_reduce_140,
  2, 128, :_reduce_141,
  4, 128, :_reduce_142,
  5, 108, :_reduce_143,
  7, 108, :_reduce_144,
  1, 129, :_reduce_145,
  2, 129, :_reduce_146,
  3, 130, :_reduce_147,
  4, 130, :_reduce_148,
  1, 130, :_reduce_none,
  3, 131, :_reduce_150,
  2, 132, :_reduce_151,
  1, 133, :_reduce_152,
  2, 133, :_reduce_153,
  0, 134, :_reduce_154,
  2, 134, :_reduce_155,
  1, 135, :_reduce_156,
  2, 135, :_reduce_157,
  2, 102, :_reduce_158,
  3, 102, :_reduce_159,
  3, 102, :_reduce_160 ]

racc_reduce_n = 161

racc_shift_n = 283

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :UNLESS => 4,
  :NUMBER => 5,
  :STRING => 6,
  :REGEX => 7,
  :TRUE => 8,
  :FALSE => 9,
  :YES => 10,
  :NO => 11,
  :ON => 12,
  :OFF => 13,
  :IDENTIFIER => 14,
  :PROPERTY_ACCESS => 15,
  :CODE => 16,
  :PARAM => 17,
  :NEW => 18,
  :RETURN => 19,
  :TRY => 20,
  :CATCH => 21,
  :FINALLY => 22,
  :THROW => 23,
  :BREAK => 24,
  :CONTINUE => 25,
  :FOR => 26,
  :IN => 27,
  :WHILE => 28,
  :SWITCH => 29,
  :WHEN => 30,
  :DELETE => 31,
  :INSTANCEOF => 32,
  :TYPEOF => 33,
  :SUPER => 34,
  :EXTENDS => 35,
  :NEWLINE => 36,
  :COMMENT => 37,
  :JS => 38,
  :INDENT => 39,
  :OUTDENT => 40,
  :UMINUS => 41,
  :SPLAT => 42,
  :NOT => 43,
  "!" => 44,
  "!!" => 45,
  "~" => 46,
  "++" => 47,
  "--" => 48,
  "*" => 49,
  "/" => 50,
  "%" => 51,
  "+" => 52,
  "-" => 53,
  "<<" => 54,
  ">>" => 55,
  ">>>" => 56,
  "&" => 57,
  "|" => 58,
  "^" => 59,
  "<=" => 60,
  "<" => 61,
  ">" => 62,
  ">=" => 63,
  "==" => 64,
  "!=" => 65,
  :IS => 66,
  :ISNT => 67,
  "&&" => 68,
  "||" => 69,
  :AND => 70,
  :OR => 71,
  "-=" => 72,
  "+=" => 73,
  "/=" => 74,
  "*=" => 75,
  "%=" => 76,
  "." => 77,
  :ASSIGN => 78,
  "||=" => 79,
  "&&=" => 80,
  "=>" => 81,
  "\n" => 82,
  ";" => 83,
  "," => 84,
  "[" => 85,
  "]" => 86,
  "{" => 87,
  "}" => 88,
  "(" => 89,
  ")" => 90 }

racc_nt_base = 91

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "UNLESS",
  "NUMBER",
  "STRING",
  "REGEX",
  "TRUE",
  "FALSE",
  "YES",
  "NO",
  "ON",
  "OFF",
  "IDENTIFIER",
  "PROPERTY_ACCESS",
  "CODE",
  "PARAM",
  "NEW",
  "RETURN",
  "TRY",
  "CATCH",
  "FINALLY",
  "THROW",
  "BREAK",
  "CONTINUE",
  "FOR",
  "IN",
  "WHILE",
  "SWITCH",
  "WHEN",
  "DELETE",
  "INSTANCEOF",
  "TYPEOF",
  "SUPER",
  "EXTENDS",
  "NEWLINE",
  "COMMENT",
  "JS",
  "INDENT",
  "OUTDENT",
  "UMINUS",
  "SPLAT",
  "NOT",
  "\"!\"",
  "\"!!\"",
  "\"~\"",
  "\"++\"",
  "\"--\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"<<\"",
  "\">>\"",
  "\">>>\"",
  "\"&\"",
  "\"|\"",
  "\"^\"",
  "\"<=\"",
  "\"<\"",
  "\">\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "IS",
  "ISNT",
  "\"&&\"",
  "\"||\"",
  "AND",
  "OR",
  "\"-=\"",
  "\"+=\"",
  "\"/=\"",
  "\"*=\"",
  "\"%=\"",
  "\".\"",
  "ASSIGN",
  "\"||=\"",
  "\"&&=\"",
  "\"=>\"",
  "\"\\n\"",
  "\";\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\"(\"",
  "\")\"",
  "$start",
  "Root",
  "Terminator",
  "Expressions",
  "Expression",
  "Value",
  "Call",
  "Code",
  "Operation",
  "Range",
  "Assign",
  "If",
  "Try",
  "Throw",
  "Return",
  "While",
  "For",
  "Switch",
  "Extends",
  "Splat",
  "Comment",
  "Block",
  "Literal",
  "AssignObj",
  "ParamList",
  "Param",
  "Array",
  "Object",
  "Parenthetical",
  "Accessor",
  "Invocation",
  "Index",
  "AssignList",
  "Super",
  "ArgList",
  "Catch",
  "ForVariables",
  "ForSource",
  "Whens",
  "When",
  "IfBlock",
  "ElsIf",
  "ElsIfs",
  "ElseBody",
  "IfEnd" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 44)
  def _reduce_1(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 45)
  def _reduce_2(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 46)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 51)
  def _reduce_4(val, _values, result)
     result = Expressions.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 52)
  def _reduce_5(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 53)
  def _reduce_6(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'grammar.y', 77)
  def _reduce_23(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 78)
  def _reduce_24(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'grammar.y', 89)
  def _reduce_27(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 90)
  def _reduce_28(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 91)
  def _reduce_29(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 92)
  def _reduce_30(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 93)
  def _reduce_31(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 94)
  def _reduce_32(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 95)
  def _reduce_33(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 96)
  def _reduce_34(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 97)
  def _reduce_35(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 98)
  def _reduce_36(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 99)
  def _reduce_37(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 100)
  def _reduce_38(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 105)
  def _reduce_39(val, _values, result)
     result = AssignNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 110)
  def _reduce_40(val, _values, result)
     result = AssignNode.new(ValueNode.new(val[0]), val[2], :object) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 111)
  def _reduce_41(val, _values, result)
     result = AssignNode.new(ValueNode.new(LiteralNode.new(val[0])), val[2], :object) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 112)
  def _reduce_42(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 117)
  def _reduce_43(val, _values, result)
     result = ReturnNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 122)
  def _reduce_44(val, _values, result)
     result = CommentNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 129)
  def _reduce_45(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 130)
  def _reduce_46(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 131)
  def _reduce_47(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 132)
  def _reduce_48(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 133)
  def _reduce_49(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 134)
  def _reduce_50(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 135)
  def _reduce_51(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 136)
  def _reduce_52(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 137)
  def _reduce_53(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 138)
  def _reduce_54(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 139)
  def _reduce_55(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 141)
  def _reduce_56(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 142)
  def _reduce_57(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 143)
  def _reduce_58(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 145)
  def _reduce_59(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 146)
  def _reduce_60(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 148)
  def _reduce_61(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 149)
  def _reduce_62(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 150)
  def _reduce_63(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 152)
  def _reduce_64(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 153)
  def _reduce_65(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 154)
  def _reduce_66(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 156)
  def _reduce_67(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 157)
  def _reduce_68(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 158)
  def _reduce_69(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 159)
  def _reduce_70(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 161)
  def _reduce_71(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 162)
  def _reduce_72(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 163)
  def _reduce_73(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 164)
  def _reduce_74(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 166)
  def _reduce_75(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 167)
  def _reduce_76(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 168)
  def _reduce_77(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 169)
  def _reduce_78(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 171)
  def _reduce_79(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 172)
  def _reduce_80(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 173)
  def _reduce_81(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 174)
  def _reduce_82(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 175)
  def _reduce_83(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 176)
  def _reduce_84(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 177)
  def _reduce_85(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 179)
  def _reduce_86(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 184)
  def _reduce_87(val, _values, result)
     result = CodeNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 185)
  def _reduce_88(val, _values, result)
     result = CodeNode.new([], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 190)
  def _reduce_89(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 191)
  def _reduce_90(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

# reduce 91 omitted

module_eval(<<'.,.,', 'grammar.y', 196)
  def _reduce_92(val, _values, result)
     result = ParamSplatNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 200)
  def _reduce_93(val, _values, result)
     result = ArgSplatNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 205)
  def _reduce_94(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 206)
  def _reduce_95(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 207)
  def _reduce_96(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 208)
  def _reduce_97(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 209)
  def _reduce_98(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 210)
  def _reduce_99(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 211)
  def _reduce_100(val, _values, result)
     result = ValueNode.new(val[0], [val[1]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 216)
  def _reduce_101(val, _values, result)
     result = AccessorNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 217)
  def _reduce_102(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 218)
  def _reduce_103(val, _values, result)
     result = SliceNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 223)
  def _reduce_104(val, _values, result)
     result = IndexNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 228)
  def _reduce_105(val, _values, result)
     result = ObjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 233)
  def _reduce_106(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 234)
  def _reduce_107(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 235)
  def _reduce_108(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 236)
  def _reduce_109(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 238)
  def _reduce_110(val, _values, result)
     result = val[0] << val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 239)
  def _reduce_111(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 244)
  def _reduce_112(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 245)
  def _reduce_113(val, _values, result)
     result = val[1].new_instance 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 246)
  def _reduce_114(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 251)
  def _reduce_115(val, _values, result)
     result = ExtendsNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 256)
  def _reduce_116(val, _values, result)
     result = CallNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 257)
  def _reduce_117(val, _values, result)
     result = CallNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 262)
  def _reduce_118(val, _values, result)
     result = CallNode.new(:super, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 268)
  def _reduce_119(val, _values, result)
     result = RangeNode.new(val[1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 270)
  def _reduce_120(val, _values, result)
     result = RangeNode.new(val[1], val[5], true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 275)
  def _reduce_121(val, _values, result)
     result = ArrayNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 280)
  def _reduce_122(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 281)
  def _reduce_123(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 282)
  def _reduce_124(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 283)
  def _reduce_125(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 284)
  def _reduce_126(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 285)
  def _reduce_127(val, _values, result)
     result = val[0] << val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 286)
  def _reduce_128(val, _values, result)
     result = val[0] << val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 287)
  def _reduce_129(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 292)
  def _reduce_130(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 293)
  def _reduce_131(val, _values, result)
     result = TryNode.new(val[1], nil, nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 295)
  def _reduce_132(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 300)
  def _reduce_133(val, _values, result)
     result = [val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 305)
  def _reduce_134(val, _values, result)
     result = ThrowNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 310)
  def _reduce_135(val, _values, result)
     result = ParentheticalNode.new(val[1], val[0].line) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 315)
  def _reduce_136(val, _values, result)
     result = WhileNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 322)
  def _reduce_137(val, _values, result)
     result = ForNode.new(val[0], val[3][0], val[2][0], val[3][1], val[2][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 323)
  def _reduce_138(val, _values, result)
     result = ForNode.new(val[3], val[2][0], val[1][0], val[2][1], val[1][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 328)
  def _reduce_139(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 329)
  def _reduce_140(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 334)
  def _reduce_141(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 336)
  def _reduce_142(val, _values, result)
     result = [val[1], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 342)
  def _reduce_143(val, _values, result)
     result = val[3].rewrite_condition(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 344)
  def _reduce_144(val, _values, result)
     result = val[3].rewrite_condition(val[1]).add_else(val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 349)
  def _reduce_145(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 350)
  def _reduce_146(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 355)
  def _reduce_147(val, _values, result)
     result = IfNode.new(val[1], val[2], nil, {:statement => true}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 356)
  def _reduce_148(val, _values, result)
     result = IfNode.new(val[1], val[2], nil, {:statement => true}) 
    result
  end
.,.,

# reduce 149 omitted

module_eval(<<'.,.,', 'grammar.y', 364)
  def _reduce_150(val, _values, result)
     result = IfNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 369)
  def _reduce_151(val, _values, result)
     result = val[1].force_statement 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 374)
  def _reduce_152(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 375)
  def _reduce_153(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 380)
  def _reduce_154(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 381)
  def _reduce_155(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 386)
  def _reduce_156(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 387)
  def _reduce_157(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 392)
  def _reduce_158(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 393)
  def _reduce_159(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 394)
  def _reduce_160(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true, :invert => true}) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser

end
